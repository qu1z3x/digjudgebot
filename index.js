import TelegramBot from "node-telegram-bot-api";
import cron from "node-cron";
import fs from "fs";

import {
	sendDataAboutText,
	sendDataAboutButton,
	sendDataAboutError,
} from "./tgterminal.js";

import { config } from "./config.js";

const TOKEN = config.TOKENs[0]; // 1 - –æ—Ä–∏–≥–∏–Ω–∞–ª
const bot = new TelegramBot(TOKEN, { polling: true });

const qu1z3xId = "923690530";
const jackId = "6815420098";
let BotName = "digjudgebot";

let usersData = [];
let scoreHistoryButtons = [];

bot.setMyCommands([
	{
		command: "/restart",
		description: "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ üèÖ",
	},
]);

const menuHomeText = [
	"–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω, —Å–ø–æ—Ä—Ç—Å–º–µ–Ω? ü§î",
	"–°–≤–∏—Å—Ç–æ–∫ –≤ —Ä–æ—Ç –∏ —è –≥–æ—Ç–æ–≤! üòÜ",
	"–ù–∞–º –Ω—É–∂–µ–Ω —Å—É–¥—å.. –Ø –∑–¥–µ—Å—å! üòâ",
	"–ö–∞–∫ –º–Ω–µ –ø–æ–º–æ—á—å, –∑–≤–µ–∑–¥–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è? üåü",
	"–ì–æ—Ç–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é, —Å–ø–æ—Ä—Ç—Å–º–µ–Ω? üí™",
	"–û–ø—è—Ç—å –∏–≥—Ä–∞? –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! üèãÔ∏è‚Äç‚ôÇÔ∏è",
	"–ì–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ? –î–µ—Ä–∂–∏ –º–µ–Ω—è –≤ —Ä—É–∫–∞—Ö! üèÄ",
	"–ì–æ—Ç–æ–≤ –æ–±–µ—Å–ø–µ—á–∏—Ç—å —á–µ—Å—Ç–Ω–æ—Å—Ç—å! üèÜ",
	"–ö–æ–º–∞–Ω–¥—ã –≥–æ—Ç–æ–≤—ã! –ß—Ç–æ –æ—Ç –º–µ–Ω—è —Ç—Ä–µ–±—É–µ—Ç—Å—è? üßê",
	"–ù–∞—á–∞—Ç—å –∏–≥—Ä—É? –Ø –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏! ü•∏",
	"–ó–∞ —á–µ—Å—Ç–Ω—É—é –∏–≥—Ä—É! –ö–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å? ü§î",
];

const motivationPhrases = [
	"–ù–µ –æ–≥–ª—è–¥—ã–≤–∞–π—Å—è –Ω–∞–∑–∞–¥. –¢–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —Å–∏–ª—å–Ω–µ–µ, –±—ã—Å—Ç—Ä–µ–µ. üí™",
	"–°–ª–æ–∂–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–µ–ª–∞—é—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ. –ö–∞–∂–¥—ã–π –ø–æ–¥—ä–µ–º, –∫–∞–∂–¥–æ–µ —É—Å–∏–ª–∏–µ - —ç—Ç–æ —à–∞–≥ –≤–ø–µ—Ä–µ–¥ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏. –î–µ—Ä–∂–∏—Å—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥! üî•",
	"–ù–µ –±–æ–π—Å—è –∏—Å–ø—ã—Ç–∞–Ω–∏–π. –ò–º–µ–Ω–Ω–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ. –ö–∞–∂–¥–æ–µ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–Ω–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ - —ç—Ç–æ —à–∞–Ω—Å –¥–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Å–∏–ª—É –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å. üí•",
	"–ü–æ–º–Ω–∏, —á—Ç–æ –∫–∞–∂–¥—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å - —ç—Ç–æ –ø–æ–±–µ–¥–∞. –î–∞–∂–µ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –≤–ø–µ—Ä–µ–¥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ. –ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–µ–±–µ –∏ –∏–¥–∏ –∫ —Å–≤–æ–µ–π –ø–æ–±–µ–¥–µ! üöÄ",
	"–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ù–∏—á—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–±—è, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Ü–µ–ª—å –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∏—á—å –µ–µ. üí´",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –ù–µ –∂–¥–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, —Å–æ–∑–¥–∞–≤–∞–π –µ–≥–æ —Å–∞–º. –¢—ã –º–æ–∂–µ—à—å –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π, –µ—Å–ª–∏ –±—É–¥–µ—à—å –Ω–∞—Å—Ç–æ–π—á–∏–≤ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω. üåü",
	"–°–ø–æ—Ä—Ç - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —ç—Ç–æ –∏ —É—Ä–æ–∫ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –¢—Ä–µ–Ω–∏—Ä—É–π—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–±–µ–¥—ã –Ω–∞ –ø–æ–ª–µ, –Ω–æ –∏ –¥–ª—è –ø–æ–±–µ–¥—ã –Ω–∞–¥ —Å–æ–±–æ–π. üí•",
	"–ü—É—Å—Ç—å –∫–∞–∂–¥–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±—É–¥–µ—Ç —à–∞–≥–æ–º –∫ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è. –¢—ã –º–æ–∂–µ—à—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –≤—Å–µ, –µ—Å–ª–∏ –≤–µ—Ä–∏—à—å –≤ —Å–µ–±—è –∏ –≥–æ—Ç–æ–≤ –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ —Å–≤–æ–∏ –º–µ—á—Ç—ã. üèÜ",
	"–°–ø–æ—Ä—Ç - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏, –Ω–æ –∏ —Å —Å–æ–±–æ–π. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç—ã –º–æ–∂–µ—à—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞. –ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏, —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å–µ–±—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º—É —É–ª—É—á—à–µ–Ω–∏—é. üí™",
	"–ë—É–¥—å –≥–æ—Ç–æ–≤ –∫ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º –Ω–∞ —Å–≤–æ–µ–º –ø—É—Ç–∏. –ò–º–µ–Ω–Ω–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç —Ç–≤–æ—é –ø–æ–±–µ–¥—É –µ—â–µ —Å–ª–∞–¥–∫–æ–π. –ù–µ –ø–∞–¥–∞–π –¥—É—Ö–æ–º –ø–µ—Ä–µ–¥ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –∞ –±–µ—Ä–∏—Å—å –∑–∞ –Ω–∏—Ö —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é. üèãÔ∏è‚Äç‚ôÇÔ∏è",
	"–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∂–¥—É—Ç —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ –±—Ä–∞—Ç—å –∏—Ö. –ù–µ –∂–¥–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å. –°–µ–≥–æ–¥–Ω—è - –ª—É—á—à–∏–π –¥–µ–Ω—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏. üåü",
	"–¢–≤–æ—è —Å–∏–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–µ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç—ã —É–ø–∞–ª, –∞ —Ç–µ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç—ã –≤—Å—Ç–∞–ª –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª –∏–¥—Ç–∏ –≤–ø–µ—Ä–µ–¥. –ù–µ –±–æ–π—Å—è –Ω–µ—É–¥–∞—á, –æ–Ω–∏ –¥–µ–ª–∞—é—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ –∏ –º—É–¥—Ä–µ–µ. üí´",
	"–ú–µ—á—Ç–∞–π –±–æ–ª—å—à–∏–º, –¥–µ–π—Å—Ç–≤—É–π —Å–º–µ–ª–æ, –≤–µ—Ä—å –≤ —Å–µ–±—è –∏ –Ω–µ –æ—Ç—Å—Ç—É–ø–∞–π –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è, –µ—Å–ª–∏ –±—É–¥–µ—à—å –Ω–∞—Å—Ç–æ–π—á–∏–≤ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω. üöÄ",
	"–ù–µ –¥—É–º–∞–π –æ —Ç–æ–º, —á—Ç–æ –º–æ–∂–µ—à—å –ø–æ—Ç–µ—Ä—è—Ç—å, –∞ –æ —Ç–æ–º, —á—Ç–æ –º–æ–∂–µ—à—å –≤—ã–∏–≥—Ä–∞—Ç—å. –ö–∞–∂–¥—ã–π —à–∞–≥ –≤–ø–µ—Ä–µ–¥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ. –î–µ—Ä–∂–∏—Å—å –∑–∞ —Å–≤–æ–∏ —Ü–µ–ª–∏ –∏ –∏–¥–∏ –∫ –Ω–∏–º —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é. üåà",
	"–¢–≤–æ–π —É—Å–ø–µ—Ö - —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ —É—Å–∏–ª–∏–π. –ù–µ –∂–¥–∏, —á—Ç–æ –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ —Ç–µ–±—è. –ë—É–¥—å –∞–∫—Ç–∏–≤–Ω—ã–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —Å–≤–æ–µ–π —Å—É–¥—å–±—ã –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º. üéØ",
	"–ü—É—Å—Ç—å —Ç–≤–æ—è —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç —Å–∏–ª—å–Ω–µ–µ, —á–µ–º —Ç–≤–æ–∏ —Å—Ç—Ä–∞—Ö–∏. –°–º–µ–ª–æ —à–∞–≥–∞–π –≤–ø–µ—Ä–µ–¥ –∏ –ø–æ–∫–∞–∂–∏ –º–∏—Ä—É, –Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –±–æ–µ—Ü. üèÜ",
	"–£—Å–ø–µ—Ö –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –∂–¥–µ—Ç, –∞ –∫ —Ç–µ–º, –∫—Ç–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –±—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ –Ω–µ—É–∫–ª–æ–Ω–Ω—ã–º –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üí•",
	"–ñ–∏–∑–Ω—å - —ç—Ç–æ –∫–∞–∫ –≤–µ–ª–æ—Å–∏–ø–µ–¥. –ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ, –Ω—É–∂–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∫–∞–∂—É—Ç—Å—è –Ω–µ–ø—Ä–µ–æ–¥–æ–ª–∏–º—ã–º–∏. –¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å. üö¥‚Äç‚ôÇÔ∏è",
	"–í–æ–∫—Ä—É–≥ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ—Ä—å –≤ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ —Å—Ç–∞–Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–º. –¢—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–≤–æ–µ–π —Å—É–¥—å–±—ã! ‚ú®",
	"–ü–æ–º–Ω–∏, —á—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤—ã–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞. –î–∞–∂–µ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –≤–ø–µ—Ä–µ–¥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ. –ò–¥–∏ –∫ –Ω–µ–π —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é. üåü",
	"–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—à–ª–æ–µ, –Ω–æ –º–æ–∂–µ—à—å –≤–ª–∏—è—Ç—å –Ω–∞ —Å–≤–æ–µ –±—É–¥—É—â–µ–µ. –°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö —Å–µ–π—á–∞—Å, –∏ –¥–µ–ª–∞–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üåà",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ—è —Å–∏–ª–∞ –∏ –º—É–¥—Ä–æ—Å—Ç—å - —ç—Ç–æ –∫–ª—é—á–∏ –∫ —É—Å–ø–µ—Ö—É. –ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–µ–±–µ, –∏–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ –ø–æ–±–µ–¥–∞ –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç —Å–µ–±—è –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å. üí™",
	"–í–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –º–µ—á—Ç—ã –∏ –∂–µ–ª–∞–Ω–∏—è. –ü–æ–≤–µ—Ä—å –≤ —Å–µ–±—è, –¥–µ–π—Å—Ç–≤—É–π —Å–º–µ–ª–æ –∏ –Ω–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç—å –ª—É—á—à–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. üöÄ",
	"–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –°–º–æ—Ç—Ä–∏ –Ω–∞ –Ω–∏—Ö –∫–∞–∫ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, –∞ –Ω–µ –∫–∞–∫ –Ω–∞ –ø—Ä–µ–≥—Ä–∞–¥—É. –¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! üåü",
	"–ü–æ–º–Ω–∏, —á—Ç–æ –∫–∞–∂–¥—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å - —ç—Ç–æ —à–∞–≥ –≤–ø–µ—Ä–µ–¥. –î–∞–∂–µ —Å–∞–º—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂–∞—é—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏. –ù–µ –∑–∞–±—ã–≤–∞–π —Ü–µ–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π —à–∞–≥ –Ω–∞ —Å–≤–æ–µ–º –ø—É—Ç–∏! üí´",
	"–¢–≤–æ—è —Å–∏–ª–∞ –Ω–µ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–±–µ–¥, –∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏–¥—Ç–∏ –≤–ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–π. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ—é –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∏—á—å —É—Å–ø–µ—Ö–∞! üåü",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–∞–µ—Ç –Ω–æ–≤—ã–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞. –ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –≤–µ–ª–∏–∫–æ–µ —Å–µ–≥–æ–¥–Ω—è. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ –¥–µ—Ä–∑–∞–π! üí™",
	"–¢—ã —É–Ω–∏–∫–∞–ª–µ–Ω –∏ —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –æ–Ω–∏ –ª–∏—à—å –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–≤–æ—é —Ä–µ—à–∏–º–æ—Å—Ç—å. –ò–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å –≤–µ—Ä–æ–π –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–∏–ª—ã! üöÄ",
	"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ. –¢–≤–æ—è —Ä–µ—à–∏–º–æ—Å—Ç—å –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —É—Å–ø–µ—Ö—É –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç –º–µ—á—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –î–µ—Ä–∂–∏—Å—å –∑–∞ —Å–≤–æ–∏ —Ü–µ–ª–∏ –∏ –∏–¥–∏ –∫ –Ω–∏–º —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é! üåà",
	"–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—Ö–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∞—Ç—å —à–∞–≥–∏ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º. –ù–µ –±–æ–π—Å—è –æ—à–∏–±–æ–∫, –æ–Ω–∏ –ª–∏—à—å —É—á–∞—Ç —Ç–µ–±—è –±—ã—Ç—å —Å–∏–ª—å–Ω–µ–µ –∏ –º—É–¥—Ä–µ–µ. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ –Ω–µ—É–∫–ª–æ–Ω–Ω—ã–º –≤ –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Å–≤–æ–∏—Ö –º–µ—á—Ç! üèÜ",
	"–¢–≤–æ—è —Å–∏–ª–∞ –∏ –º—É–¥—Ä–æ—Å—Ç—å –Ω–µ—Å—Ä–∞–≤–Ω–∏–º—ã. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å. –°–º–æ—Ç—Ä–∏ –Ω–∞ —Å–≤–æ–∏ —Ü–µ–ª–∏ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é! ‚ú®",
	"–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ–º –∫ —É—Å–ø–µ—Ö—É –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –≤ —Å–≤–æ–∏—Ö —Å–∏–ª–∞—Ö. –¢—ã –º–æ–∂–µ—à—å –≤—Å–µ, –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—à—å –≤ —Å–µ–±—è –∏ –≥–æ—Ç–æ–≤ –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ —Å–≤–æ–∏ –º–µ—á—Ç—ã. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–≤–æ–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–µ! üí•",
	"–°–ª–æ–∂–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –ª–∏—à—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –∫ –≤–µ–ª–∏–∫–∏–º —Å–≤–µ—Ä—à–µ–Ω–∏—è–º. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —É–ø–æ—Ä–Ω—ã–º, –∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ–±–∏—Ç—å—Å—è —Ç–æ–≥–æ, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å. üåü",
	"–¢–≤–æ—è —Å–∏–ª–∞ –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å –Ω–µ –∏–º–µ—é—Ç –≥—Ä–∞–Ω–∏—Ü. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–±—è –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º! üí™",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–∞–µ—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞. –ù–µ —É–ø—É—Å–∫–∞–π —ç—Ç–æ—Ç —à–∞–Ω—Å! –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üåü",
	"–¢–≤–æ–∏ –º–µ—á—Ç—ã - —ç—Ç–æ —Ç–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫ —É—Å–ø–µ—Ö—É. –ù–µ –±–æ–π—Å—è –º–µ—á—Ç–∞—Ç—å –±–æ–ª—å—à–∏–º, –∏–¥–∏ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—à—å –≤ —Å–µ–±—è! üöÄ",
	"–ö–∞–∂–¥—ã–π —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –¥–µ–ª–∞–µ—à—å –≤–ø–µ—Ä–µ–¥, –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –æ–Ω–∏ –ª–∏—à—å —É–∫—Ä–µ–ø–ª—è—é—Ç —Ç–≤–æ—é —Ä–µ—à–∏–º–æ—Å—Ç—å. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ –æ–ø—Ç–∏–º–∏–∑–º–æ–º! üåà",
	"–¢—ã - —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –ù–µ –¥–æ–≤–µ—Ä—è–π —Å–ª—É—á–∞—é, —Å—Ç—Ä–æ–π —Å–≤–æ—é –∂–∏–∑–Ω—å —Å–∞–º. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–º –∏ –Ω–µ—É–∫–ª–æ–Ω–Ω—ã–º –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö–∞! üèÜ",
	"–°–ª–æ–∂–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ –ø—É—Ç–∏ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —É–ø–æ—Ä–Ω—ã–º, –∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–±—è. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –≤–µ—Ä–æ–π –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–∏–ª—ã! üí´",
	"–ù–µ –±–æ–π—Å—è –Ω–µ—É–¥–∞—á, –æ–Ω–∏ –ª–∏—à—å —É—á–∞—Ç —Ç–µ–±—è –±—ã—Ç—å —Å–∏–ª—å–Ω–µ–µ. –ö–∞–∂–¥–∞—è –ø—Ä–µ–≥—Ä–∞–¥–∞ - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ –ø–æ–±–µ–¥–∞ –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç —Å–µ–±—è –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å! ‚ú®",
	"–¢—ã - —Å–∏–ª–∞ –ø—Ä–∏—Ä–æ–¥—ã, —Å–ø–æ—Å–æ–±–Ω–∞—è –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è. –ù–µ –¥–æ–ø—É—Å–∫–∞–π –º—ã—Å–ª–∏ –æ –ø–æ—Ä–∞–∂–µ–Ω–∏—è—Ö, —Å—Ç—Ä–µ–º–∏—Å—å —Ç–æ–ª—å–∫–æ –∫ –ø–æ–±–µ–¥–∞–º. –°–º–æ—Ç—Ä–∏ –Ω–∞ —Å–≤–æ–∏ —Ü–µ–ª–∏ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞! üí•",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏, –≥–æ—Ç–æ–≤–∞—è –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –≤–µ–ª–∏–∫–∏–º–∏ —Å–≤–µ—Ä—à–µ–Ω–∏—è–º–∏. –ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –≤–µ–ª–∏–∫–æ–µ —Å–µ–≥–æ–¥–Ω—è. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏! üìñ",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç—ã - –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∞—Å—Ç—å –º–∏—Ä–∞, —Ç—ã - —Å–∏–ª–∞, —Å–ø–æ—Å–æ–±–Ω–∞—è –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω—ã. –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ—Ä—å –≤ —Å–≤–æ–∏ –º–µ—á—Ç—ã, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Ç–æ–≥–æ, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å. –°—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ —Å —Ä–µ—à–∏–º–æ—Å—Ç—å—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é! üåà",
	"–¢—ã - —Ö–æ–∑—è–∏–Ω —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –ù–µ –¥–æ–ø—É—Å–∫–∞–π –º—ã—Å–ª–∏ –æ –ø–æ—Ä–∞–∂–µ–Ω–∏—è—Ö, —Å—Ç—Ä–µ–º–∏—Å—å —Ç–æ–ª—å–∫–æ –∫ –ø–æ–±–µ–¥–∞–º. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —Ä–µ—à–∏–º–æ—Å—Ç—å—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞! üöÄ",
	"–ö–∞–∂–¥–∞—è –ø—Ä–µ–≥—Ä–∞–¥–∞ - —ç—Ç–æ –ª–∏—à—å —à–∞–≥ –∫ –ø–æ–±–µ–¥–µ. –ù–µ –ø–æ–∑–≤–æ–ª—è–π —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º —Å–±–∏—Ç—å —Ç–µ–±—è —Å –ø—É—Ç–∏ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º. –°–º–æ—Ç—Ä–∏ –Ω–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–¥–æ–ª–µ–µ—à—å –∏—Ö! üí´",
	"–¢–≤–æ—è —Å–∏–ª–∞ –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –Ω–µ –∑–Ω–∞—é—Ç –≥—Ä–∞–Ω–∏—Ü. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º! üí™",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–∞–µ—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ –∏ –ª—É—á—à–µ. –ù–µ —É–ø—É—Å–∫–∞–π —ç—Ç–æ—Ç —à–∞–Ω—Å! –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üåü",
	"–¢—ã - —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ. –ù–µ –¥–æ–≤–µ—Ä—è–π —Å–ª—É—á–∞—é, —Å—Ç—Ä–æ–π —Å–≤–æ—é –∂–∏–∑–Ω—å —Å–∞–º. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–º –∏ –Ω–µ—É–∫–ª–æ–Ω–Ω—ã–º –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö–∞! üèÜ",
	"–°–ª–æ–∂–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —É–ø–æ—Ä–Ω—ã–º, –∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–±—è. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –≤–µ—Ä–æ–π –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–∏–ª—ã! üí•",
	"–ù–µ –±–æ–π—Å—è –Ω–µ—É–¥–∞—á, –æ–Ω–∏ –ª–∏—à—å —É—á–∞—Ç —Ç–µ–±—è –±—ã—Ç—å —Å–∏–ª—å–Ω–µ–µ. –ö–∞–∂–¥–∞—è –ø—Ä–µ–≥—Ä–∞–¥–∞ - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ –ø–æ–±–µ–¥–∞ –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç —Å–µ–±—è –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å! ‚ú®",
	"–¢—ã - —Å–∏–ª–∞ –ø—Ä–∏—Ä–æ–¥—ã, —Å–ø–æ—Å–æ–±–Ω–∞—è –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è. –ù–µ –¥–æ–ø—É—Å–∫–∞–π –º—ã—Å–ª–∏ –æ –ø–æ—Ä–∞–∂–µ–Ω–∏—è—Ö, —Å—Ç—Ä–µ–º–∏—Å—å —Ç–æ–ª—å–∫–æ –∫ –ø–æ–±–µ–¥–∞–º. –°–º–æ—Ç—Ä–∏ –Ω–∞ —Å–≤–æ–∏ —Ü–µ–ª–∏ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞! üí´",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞. –ù–µ —É–ø—É—Å–∫–∞–π —ç—Ç–æ—Ç —à–∞–Ω—Å! –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üåü",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç—ã - –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∞—Å—Ç—å –º–∏—Ä–∞, —Ç—ã - —Å–∏–ª–∞, —Å–ø–æ—Å–æ–±–Ω–∞—è –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω—ã. –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ—Ä—å –≤ —Å–≤–æ–∏ –º–µ—á—Ç—ã, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Ç–æ–≥–æ, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å. –°—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ —Å —Ä–µ—à–∏–º–æ—Å—Ç—å—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é! üåà",
	"–¢–≤–æ—è —Å–∏–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è –≤–µ—Ä–∞. –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ—Ä—å –≤ —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —É–ø–æ—Ä–Ω—ã–º, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞! üí™",
	"–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–∏–¥–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö - —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–∞—Ä. –ù–µ –±–æ–π—Å—è –≤—ã–∑–æ–≤–æ–≤, –∏–¥–∏ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –∏–º —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é. –¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è! üöÄ",
	"–ö–∞–∂–¥–∞—è –º–µ—á—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ –Ω–µ—É–∫–ª–æ–Ω–Ω—ã–º –≤ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ —É—Å–ø–µ—Ö—É! üåü",
	"–¢—ã - —Ö—É–¥–æ–∂–Ω–∏–∫ —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –ù–µ –¥–æ–≤–µ—Ä—è–π —Å–ª—É—á–∞—é, —Å–æ–∑–¥–∞–≤–∞–π —Å–≤–æ—é –∂–∏–∑–Ω—å —Å–∞–º. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–º, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —Å–≤–æ–∏—Ö –º–µ—á—Ç! ‚ú®",
	"–ö–∞–∂–¥–∞—è –Ω–µ—É–¥–∞—á–∞ - —ç—Ç–æ —É—Ä–æ–∫ –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–µ–±–µ, –∏–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å —Ä–µ—à–∏–º–æ—Å—Ç—å—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è, –µ—Å–ª–∏ –±—É–¥–µ—à—å –Ω–∞—Å—Ç–æ–π—á–∏–≤ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω! üèÜ",
	"–¢–≤–æ—è —Å–∏–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –∏–¥–∏ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –∏–º —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é. –¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! üí•",
	"–í–µ—Ä—å –≤ —Å–µ–±—è, –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π. –¢—ã - –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–≤–æ–µ–π —Å–∏–ª—ã –∏ –º—É–¥—Ä–æ—Å—Ç–∏. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —Ä–µ—à–∏–º–æ—Å—Ç—å—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üí´",
	"–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ù–µ —Å–¥–∞–≤–∞–π—Å—è –ø–µ—Ä–µ–¥ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏, —Å–º–æ—Ç—Ä–∏ –Ω–∞ –Ω–∏—Ö –∫–∞–∫ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è! üåà",
	"–¢–≤–æ—è —Å–∏–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è –≤–µ—Ä–∞ –≤ —Å–µ–±—è. –í–µ—Ä—å –≤ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –≤–µ—Ä—å –≤ —Å–≤–æ–∏ –º–µ—á—Ç—ã, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–º, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞! üåü",
	"–¢—ã - –∫–∞–ø–∏—Ç–∞–Ω —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –ù–µ –¥–æ–ø—É—Å–∫–∞–π –º—ã—Å–ª–∏ –æ –ø–æ—Ä–∞–∂–µ–Ω–∏—è—Ö, —Å—Ç—Ä–µ–º–∏—Å—å —Ç–æ–ª—å–∫–æ –∫ –ø–æ–±–µ–¥–∞–º. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. üí™",
	"–¢—ã - —Ö—É–¥–æ–∂–Ω–∏–∫ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏. –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å - —ç—Ç–æ –ø—É—Å—Ç–æ–π —Ö–æ–ª—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Ç–≤–æ–∏–º–∏ —è—Ä–∫–∏–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏. –ë—É–¥—å —Ç–≤–æ—Ä—Ü–æ–º —Å–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –∏ –Ω–∞–ø–æ–ª–Ω–∏ –µ–≥–æ —è—Ä–∫–∏–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏ —Å–≤–æ–∏—Ö –º–µ—á—Ç! üé®",
	"–°–∏–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è. –î–∞–∂–µ –∫–æ–≥–¥–∞ —Ç–µ–º–Ω–æ –≤–æ–∫—Ä—É–≥, –Ω–∞–π–¥–∏ —Å–≤–æ–π —Å–≤–µ—Ç –∏ –∏–¥–∏ –∫ –Ω–µ–º—É. –¢—ã - —Å–≤–µ—Ç–∏–ª–æ, —Å–ø–æ—Å–æ–±–Ω–æ–µ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏! üí°",
	"–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ. –ù–µ —Ç–µ—Ä—è–π –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–∂–∞–ª–µ–Ω–∏—è –æ –ø—Ä–æ—à–ª–æ–º, —Å—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Å–≤–æ–µ–º –±—É–¥—É—â–µ–º –∏ –¥–≤–∏–≥–∞–π—Å—è –∫ –Ω–µ–º—É —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é! üåÖ",
	"–°–ø–æ—Ä—Ç - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —ç—Ç–æ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥—É—à–∏. –ü–æ–≤–µ—Ä—å –≤ —Å–µ–±—è, –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–π —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∞–Ω–æ–≤–∏—Å—å —Å–∏–ª—å–Ω–µ–µ —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –¥–Ω–µ–º! üí™",
	"–¢–≤–æ—è —Å–∏–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è —Ä–µ—à–∏–º–æ—Å—Ç—å. –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã –≤—Å—Ç–∞–µ—à—å –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏—è, —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —Å–∏–ª—å–Ω–µ–µ. –ù–µ –±–æ–π—Å—è –Ω–µ—É–¥–∞—á, –æ–Ω–∏ –¥–µ–ª–∞—é—Ç —Ç–µ–±—è –º—É–¥—Ä–µ–µ –∏ —Å–∏–ª—å–Ω–µ–µ! üåü",
	"–£—Å–ø–µ—Ö - —ç—Ç–æ –Ω–µ —Ñ–∏–Ω–∏—à–Ω–∞—è —á–µ—Ä—Ç–∞, —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–º–∞. –°—Ç—Ä–µ–º–∏—Å—å –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö –º–µ—á—Ç! üöÄ",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ–∏ –º—ã—Å–ª–∏ —Å–æ–∑–¥–∞—é—Ç —Ç–≤–æ—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –ú–µ—á—Ç–∞–π –∫—Ä–∞—Å–∏–≤–æ, –¥–µ–π—Å—Ç–≤—É–π —Å–º–µ–ª–æ –∏ –≤–µ—Ä—å –≤ —Å–µ–±—è, –∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ —Å—Ç–∞–Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–º! ‚ú®",
	"–¢—ã - –∑–≤–µ–∑–¥–∞ —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏. –ù–µ –¥–æ–ø—É—Å–∫–∞–π, —á—Ç–æ–±—ã –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π –ø–∏—Å–∞–ª –µ–µ –∑–∞ —Ç–µ–±—è. –ë—É–¥—å –∞–≤—Ç–æ—Ä–æ–º —Å–≤–æ–µ–π —Å—É–¥—å–±—ã –∏ –∏–¥–∏ –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º —Å–º–µ–ª–æ –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ! üåü",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Å–µ–±—è. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º, —Å—Ç—Ä–µ–º–∏—Å—å –∫ –±–æ–ª—å—à–µ–º—É –∏ –±—É–¥—å –≥–æ—Ç–æ–≤ –∫ –≤—ã–∑–æ–≤–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –∂–¥—É—Ç —Ç–µ–±—è –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É! üí´",
	"–¢—ã - –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—É–¥—å–±—ã. –ü–æ—Å—Ç–∞–≤—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π –≤—ã—Å–æ–∫–∏–µ —Ü–µ–ª–∏, –∏–¥–∏ –∫ –Ω–∏–º —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö –º–µ—á—Ç! üè∞",
	"–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å–≤–æ–π –Ω–∞—á–∞–ª–æ —Å —á—å–∏–º-—Ç–æ –∫–æ–Ω—Ü–æ–º. –ö–∞–∂–¥—ã–π –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç —Å–≤–æ–π –ø—É—Ç—å, –∏ —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–∞. –î–æ–≤–µ—Ä—å—Å—è —Å–≤–æ–µ–º—É –ø—É—Ç–∏ –∏ –¥–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å –≤–µ—Ä–æ–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é! üåü",
	"–í—Å—è–∫–∏–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è —Å–ª–∞–±—ã–º, –ø–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ—è —Å–∏–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —á–∏—Å–ª–∞–º–∏ –Ω–∞ –≤–µ—Å–∞—Ö –∏–ª–∏ —Å–µ–∫—É–Ω–¥–∞—Ö –Ω–∞ —Ö—Ä–æ–Ω–æ–º–µ—Ç—Ä–µ. –¢–≤–æ—è –∏—Å—Ç–∏–Ω–Ω–∞—è —Å–∏–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è —Ä–µ—à–∏–º–æ—Å—Ç—å –∏ –≤–µ—Ä–∞ –≤ —Å–µ–±—è! üí™",
	"–ë—É–¥—å –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º –¥–ª—è —Å–µ–±—è –∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö. –¢–≤–æ–∏ —É—Å–ø–µ—Ö–∏ - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–≤–æ–∏ –ª–∏—á–Ω—ã–µ –ø–æ–±–µ–¥—ã, —ç—Ç–æ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è –¥–ª—è –æ–∫—Ä—É–∂–∞—é—â–∏—Ö. –ü–æ–∫–∞–∂–∏ –º–∏—Ä—É, —á—Ç–æ —Ç—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è! üöÄ",
	"–¢–≤–æ–µ —Ç–µ–ª–æ - —ç—Ç–æ —Ö—Ä–∞–º —Ç–≤–æ–µ–≥–æ –¥—É—Ö–∞. –£—Ö–∞–∂–∏–≤–∞–π –∑–∞ –Ω–∏–º, —Ç—Ä–µ–Ω–∏—Ä—É–π –µ–≥–æ, —É–∫—Ä–µ–ø–ª—è–π –µ–≥–æ, –∏ —Ç—ã –æ–±—Ä–µ—Ç–µ—à—å –Ω–µ —Ç–æ–ª—å–∫–æ —Å–∏–ª—É —Ñ–∏–∑–∏—á–µ—Å–∫—É—é, –Ω–æ –∏ –¥—É—à–µ–≤–Ω—É—é. –ó–∞–±–æ—Ç—å—Å—è –æ —Å–µ–±–µ –∏ –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ–≥–¥–∞! üåø",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ–∏ –º—ã—Å–ª–∏ - —Ç–≤–æ–∏ —Å–∞–º—ã–µ –º–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –ù–∞–ø–æ–ª–Ω–∏ –∏—Ö –ø–æ–∑–∏—Ç–∏–≤–æ–º, —Å–∏–ª–æ–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ –∏–¥–∏ –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º —Å–º–µ–ª–æ! üåü",
	"–í—Å–µ –≤–µ–ª–∏–∫–∏–µ –∏–¥–µ–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —à–∞–≥–∞. –ù–µ –±–æ–π—Å—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω –∫–∞–∂–µ—Ç—Å—è –º–∞–ª–µ–Ω—å–∫–∏–º. –û–Ω –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–∞—á–∞–ª–æ–º –±–æ–ª—å—à–æ–π –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º! üö∂‚Äç‚ôÇÔ∏è",
	"–ù–µ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–ª—è —Ç–æ–≥–æ, –∫—Ç–æ –≤–µ—Ä–∏—Ç –≤ —Å–µ–±—è –∏ –≥–æ—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å. –°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö, –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–¥–µ–ª–∞–π —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —à–∞–≥ –≤ –∏—Ö —Å—Ç–æ—Ä–æ–Ω—É. –ú–µ—á—Ç–∞–π –±–æ–ª—å—à–∏–º –∏ –¥–µ–π—Å—Ç–≤—É–π —Å–º–µ–ª–æ! üåà",
	"–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –Ω–µ –ø–æ–≤–æ–¥ —Å–¥–∞–≤–∞—Ç—å—Å—è, –∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ. –í–∑–≥–ª—è–Ω–∏ –Ω–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –∫–∞–∫ –Ω–∞ —à–∞–Ω—Å –¥–ª—è —Å–≤–æ–µ–≥–æ —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è. –¢—ã –≥–æ—Ä–∞–∑–¥–æ —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è! üí´",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ—è —Å—É–¥—å–±–∞ –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö. –¢—ã - –∫–∞–ø–∏—Ç–∞–Ω —Å–≤–æ–µ–≥–æ –∫–æ—Ä–∞–±–ª—è, –∏ —Ç–æ–ª—å–∫–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±–∏—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–µ–≥–æ –ø–ª–∞–≤–∞–Ω–∏—è. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ –∏–¥–∏ –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º —Å–º–µ–ª–æ –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ! ‚õµÔ∏è",
	"–ù–µ —Å–¥–∞–≤–∞–π—Å—è –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –∞ –±–æ—Ä–∏—Å—å —Å –Ω–∏–º–∏. –ö–∞–∂–¥–∞—è –ø–æ–±–µ–¥–∞ –Ω–∞–¥ —Å–æ–±–æ–π –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ. –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üí™",
	"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ —Ç–≤–æ–µ–π –∫–Ω–∏–≥–µ –∂–∏–∑–Ω–∏. –ü—É—Å—Ç—å —Ç–≤–æ–∏ –ø–æ—Å—Ç—É–ø–∫–∏ –±—É–¥—É—Ç –ø–µ—Ä–æ–º, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –ø–∏—à–µ—à—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é. –î–µ–ª–∞–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–Ω–∞—á–∏–º—ã–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è! üìñ",
	"–¢—ã —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π. –ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–µ–±–µ –∏ —Å–≤–æ–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö. –°–º–µ–ª–æ –±–µ—Ä–∏—Å—å –∑–∞ –Ω–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ –Ω–æ–≤—ã–º –≤–µ—Ä—à–∏–Ω–∞–º. –¢—ã –º–æ–∂–µ—à—å –≤—Å–µ, —á—Ç–æ –∑–∞—Ö–æ—á–µ—à—å! üèîÔ∏è",
	"–í—Å–µ, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤–æ–æ–±—Ä–∞–∑–∏—Ç—å, —Ç—ã –º–æ–∂–µ—à—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—å. –ü–æ–≤–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ –º–µ—á—Ç—ã, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ—à—å —Å–∏–ª—ã –∏ —Ä–µ—Å—É—Ä—Å—ã, —á—Ç–æ–±—ã –∏—Ö –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ –¥–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å–º–µ–ª–æ! üí´",
	"–ù–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–π—Å—è –Ω–∞ —Å–≤–æ–∏—Ö –Ω–µ—É–¥–∞—á–∞—Ö. –í—Å—è–∫–∞—è –Ω–µ—É–¥–∞—á–∞ - —ç—Ç–æ —É—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ –∏ –º—É–¥—Ä–µ–µ. –ü—Ä–∏–º–∏ –µ–≥–æ, –∏–∑–≤–ª–µ–∫–∏ —É—Ä–æ–∫–∏ –∏ –¥–≤–∏–≥–∞–π—Å—è –¥–∞–ª—å—à–µ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é! üìö",
	"–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—Ö–∞ - —ç—Ç–æ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ —É–ø–æ—Ä—Å—Ç–≤–æ. –î–∞–∂–µ –µ—Å–ª–∏ –ø—É—Ç—å –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º –∫–∞–∂–µ—Ç—Å—è —Ç—Ä—É–¥–Ω—ã–º, –Ω–µ —Å–¥–∞–≤–∞–π—Å—è. –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üë£",
	"–ë—É–¥—å —Ö—Ä–∞–±—Ä—ã–º –≤ —Ç–µ–º–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–∞—Ö –∏ –≤–µ—Ä—å –≤ —Å–µ–±—è, –∫–æ–≥–¥–∞ –≤—Å–µ –∫–∞–∂–µ—Ç—Å—è –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–º. –í–Ω—É—Ç—Ä–∏ —Ç–µ–±—è —Å–∏–ª–∞, —Å–ø–æ—Å–æ–±–Ω–∞—è –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –î–æ–≤–µ—Ä—å—Å—è —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É –∏ –¥–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å–º–µ–ª–æ! üî•",
	"–¢—ã - —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –ù–µ –¥–∞–≤–∞–π –Ω–∏–∫–æ–º—É –∏–ª–∏ —á–µ–º—É-—Ç–æ –¥—Ä—É–≥–æ–º—É –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ—é –∂–∏–∑–Ω—å. –í–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∏ –∏–¥–∏ –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é! üåü",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ—è –∂–∏–∑–Ω—å - —ç—Ç–æ —Ç–≤–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç—ã —Å–æ–∑–¥–∞–µ—à—å –Ω–æ–≤—ã–µ —à–µ–¥–µ–≤—Ä—ã —Å–≤–æ–∏–º–∏ –ø–æ—Å—Ç—É–ø–∫–∞–º–∏, –º—ã—Å–ª—è–º–∏ –∏ —Ä–µ—à–µ–Ω–∏—è–º–∏. –°–¥–µ–ª–∞–π —Å–≤–æ—é –∂–∏–∑–Ω—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ä–¥–∏—Ç—å—Å—è! üé®",
	"–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞. –ü–æ–≤–µ—Ä—å –≤ —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –ø–æ–≤–µ—Ä—å –≤ —Å–µ–±—è, –∏ —Å–¥–µ–ª–∞–π —ç—Ç–æ—Ç –¥–µ–Ω—å –æ—Å–æ–±–µ–Ω–Ω—ã–º. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞, –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –±—É–¥–µ—à—å –≤–µ—Ä–∏—Ç—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ –º–µ—á—Ç—ã! ‚ú®",
	"–ù–µ—Ç –ª—É—á—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞—Ç—å, —á–µ–º —Å–µ–π—á–∞—Å. –ù–µ –∂–¥–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –∏–ª–∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º. –î–µ–π—Å—Ç–≤—É–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–±–ª–∏–∂–∞–π—Å—è –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º! ‚è≥",
	"–ü–æ–≤–µ—Ä—å –≤ —Å–≤–æ—é —Å–∏–ª—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –¢—ã –æ–±–ª–∞–¥–∞–µ—à—å –≤—Å–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–µ–±–µ, –∏–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å—é! üí™",
	"–¢–≤–æ—è —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å - —Ç–≤–æ–∏ —Å–∏–ª—å–Ω–µ–π—à–∏–µ –æ—Ä—É–∂–∏—è –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ù–µ –æ—Ç—Å—Ç—É–ø–∞–π –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –Ω–µ –ø–æ–∑–≤–æ–ª—è–π —Å–µ–±–µ —É–Ω—ã–≤–∞—Ç—å. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –≤—Å–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è! üöÄ",
	"–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Å–µ–±—è. –ü–æ—Å—Ç–∞–≤—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π –Ω–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã, —Å—Ç—Ä–µ–º–∏—Å—å –∫ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—é, –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Å—å –ª—É—á—à–µ, —á–µ–º –±—ã–ª –≤—á–µ—Ä–∞! üåü",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —É—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –Ω–µ –±–æ–∏—Ç—Å—è —Ä–∏—Å–∫–æ–≤–∞—Ç—å –∏ –Ω–µ –±–æ–∏—Ç—Å—è –æ—à–∏–±–∞—Ç—å—Å—è. –ù–µ –±–æ–π—Å—è —Å–¥–µ–ª–∞—Ç—å —à–∞–≥ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å, –∏–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å–º–µ–ª–æ, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±—å–µ—à—å—Å—è —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üéØ",
	"–ë—É–¥—å –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π—Å—è –∫ –Ω–∏–º —Å –ª–µ–≥–∫–æ—Å—Ç—å—é. –ì–∏–±–∫–æ—Å—Ç—å –∏ —É–º–µ–Ω–∏–µ –ø—Ä–∏—Å–ø–æ—Å–∞–±–ª–∏–≤–∞—Ç—å—Å—è –∫ –Ω–æ–≤—ã–º —É—Å–ª–æ–≤–∏—è–º - —ç—Ç–æ –∫–ª—é—á–µ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ª—é–¥–µ–π. –ò–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —É–º–æ–º –∏ —Å–µ—Ä–¥—Ü–µ–º! üîÑ",
	"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º. –í—Å–µ–≥–¥–∞ –∏—â–∏ –Ω–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è. –¢—ã - –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Å–∏–ª—å–Ω–µ–µ –∏ –º—É–¥—Ä–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å. –ü–æ–≤–µ—Ä—å –≤ —Å–µ–±—è –∏ —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª! üåà",
	"–£—Å–ø–µ—Ö - —ç—Ç–æ –Ω–µ —Ç–æ—á–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, —ç—Ç–æ –ø—É—Ç—å. –ù–µ —Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Ü–µ–ª–∏, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º –¥–≤–∏–∂–µ–Ω–∏—è –∫ –Ω–µ–π. –ö–∞–∂–¥—ã–π —à–∞–≥ –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ! üë£",
	"–ü–æ–º–Ω–∏, —á—Ç–æ —Ç–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–≥–æ–Ω—å - —Ç–≤–æ–π —Å–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π —Å–æ—é–∑–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –µ–≥–æ –≥–æ—Ä—è—â–∏–º, –Ω–µ –ø–æ–∑–≤–æ–ª—è–π —Å–æ–º–Ω–µ–Ω–∏—è–º –∏ —Å—Ç—Ä–∞—Ö–∞–º –µ–≥–æ –ø–æ—Ç—É—à–∏—Ç—å. –ò–¥–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏ —Å —è—Ä–æ—Å—Ç–Ω—ã–º –ø–ª–∞–º–µ–Ω–µ–º –≤ —Å–µ—Ä–¥—Ü–µ! üî•",
	"–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–∞—é—Ç –Ω–∞—Å –ø–æ–≤—Å—é–¥—É, –º—ã –¥–æ–ª–∂–Ω—ã —Ç–æ–ª—å–∫–æ –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã –∏—Ö –∑–∞–º–µ—Ç–∏—Ç—å –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º–∏. –ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∏–¥–∏ –≤–ø–µ—Ä–µ–¥ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –≤–∑–≥–ª—è–¥–æ–º –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å—é –∫ –¥–µ–π—Å—Ç–≤–∏—é! üå†",
	"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç—ã - —Ç–≤–æ—Ä–µ—Ü —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –¢—ã –∏–º–µ–µ—à—å —Å–∏–ª—É –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É, –Ω–∞—á–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä–µ–¥ —Å–º–µ–ª–æ –∏ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –∏ –Ω–∏—á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ! üí´",
];

let match, rndNum, textToSayHello, rndId;

//? –§–£–ù–ö–¶–ò–ò

async function firstMeeting(chatId, stageNum = 1) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		dataAboutUser.userAction = `firstMeeting${stageNum}`;

		switch (stageNum) {
			case 1:
				const dateNowHHNN =
					new Date().getHours() * 100 + new Date().getMinutes();
				if (dateNowHHNN < 1200 && dateNowHHNN >= 600)
					textToSayHello = "–§–∏–∑–∫—É–ª—å—Ç-—É—Ç—Ä–∞";
				else if (dateNowHHNN < 1700 && dateNowHHNN >= 1200)
					textToSayHello = "–§–∏–∑–∫—É–ª—å—Ç-–¥–Ω—è";
				else if (dateNowHHNN < 2200 && dateNowHHNN >= 1700)
					textToSayHello = "–§–∏–∑–∫—É–ª—å—Ç-–≤–µ—á–µ—Ä–∞";
				else if (dateNowHHNN >= 2200 || dateNowHHNN < 600)
					textToSayHello = "–§–∏–∑–∫—É–ª—å—Ç-–Ω–æ—á–∏";

				await bot.editMessageText(
					`<b>${textToSayHello}, c—É–¥—å—è! üëã\n\n–†–∞–¥ –≤—Å—Ç—Ä–µ—á–µ —Å —Ç–æ–±–æ–π! </b>\n–ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å <b>–æ—Ç–ª–∏—á–Ω—ã–º –∏—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º</b> –¥–ª—è <b>—Å—É–¥–µ–π—Å—Ç–≤–∞ –º–∞—Ç—á–µ–π,</b> –∞ —Ç–∞–∫–∂–µ <b>–æ—Ç–ª–∏—á–Ω—ã–º –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–º</b> –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–∞—Ö! ü´°`,
					{
						parse_mode: "html",
						chat_id: chatId,
						message_id: usersData.find((obj) => obj.chatId == chatId)
							.messageId,
						disable_web_page_preview: true,
						reply_markup: {
							inline_keyboard: [
								[
									{
										text: "–°–≤–∏—Å—Ç–æ–∫ –≤ —Ä—É–∫–∏! üî•",
										callback_data: "firstMeeting2",
									},
								],
							],
						},
					}
				);

				break;
			case 2:
				await bot.editMessageText(
					`<b>–ù–æ.. –ú—ã –≤–µ–¥—å –¥–∞–∂–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã? ü§∑‚Äç‚ôÇÔ∏è</b>\n\n<i>(–ò–∑–º–µ–Ω—è–µ—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)</i>\n\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? ü§î</b>`,
					{
						parse_mode: "html",
						chat_id: chatId,
						message_id: usersData.find((obj) => obj.chatId == chatId)
							.messageId,
						disable_web_page_preview: true,
						reply_markup: {
							inline_keyboard: [
								[
									{
										text: `–û—Å—Ç–∞–≤–∏—Ç—å ${dataAboutUser.telegramFirstName} ‚úÖ`,
										callback_data: "firstMeeting3",
									},
								],
								[{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "firstMeeting1" }],
							],
						},
					}
				);
				break;
			case 3:
				menuHome(chatId);
				break;
		}
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function menuHome(chatId) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		dataAboutUser.userAction = "menuHome";
		rndNum = Math.floor(Math.random() * menuHomeText.length);

		const dateNowHHNN = new Date().getHours() * 100 + new Date().getMinutes();
		if (dateNowHHNN < 1200 && dateNowHHNN >= 600)
			textToSayHello = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ";
		else if (dateNowHHNN < 1700 && dateNowHHNN >= 1200)
			textToSayHello = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å";
		else if (dateNowHHNN < 2200 && dateNowHHNN >= 1700)
			textToSayHello = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä";
		else if (dateNowHHNN >= 2200 || dateNowHHNN < 600)
			textToSayHello = "–î–æ–±—Ä–æ–π –Ω–æ—á–∏";

		await bot.editMessageText(
			`${textToSayHello}, ${dataAboutUser.login}!\n\n<b>${menuHomeText[rndNum]}</b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId === chatId)
					.messageId,
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: "5Ô∏è‚É£:9Ô∏è‚É£ –°—á—ë—Ç –æ—á–∫–æ–≤ 1Ô∏è‚É£:3Ô∏è‚É£",
								callback_data: "gameScore",
							},
						],
						[
							{ text: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è ü¶Ö", callback_data: "motivation" },
							{ text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è", callback_data: "settings" },
						],
						// [{ text: "üìó –°—É–¥–µ–π—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª üßÆ", callback_data: "judgeMenu" }],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

async function netsporta(chatId) {
	try {
		// –ù–æ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å <b>—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∞—Ç—á –ø–æ —Å–≤–æ–∏–º –ø—Ä–∞–≤–∏–ª–∞–º,</b> –Ω–∞–∂–∞–≤ –Ω–∞ —Ä–∞–∑–¥–µ–ª <i><b>"–°–≤–æ–π ‚öôÔ∏è"!</b></i> üòâ
		await bot.editMessageText(
			`–ü–æ–º–æ—à–Ω–∏–∫ –≤ <b><i>—Ä–∞–Ω–Ω–µ–º –¥–æ—Å—Ç—É–ø–µ,</i></b> –∏ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –¥–æ—Å—Ç—É–ø–Ω—ã <b>–Ω–µ –≤—Å–µ</b> –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞! ‚òπÔ∏è\n\n–ï—Å—Ç—å –∏–¥–µ–∏? <b>–ù–∞–ø–∏—à–∏ –Ω–∞–º! üòÉ\n\n<a href="https://t.me/digfusionsupport">digfusion | –ø–æ–¥–¥–µ—Ä–∂–∫–∞</a></b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId === chatId)
					.messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "gameScore" },
							{
								text: "–ù–∞–ø–∏—Å–∞—Ç—å‚úçÔ∏è",
								url: "https://t.me/digfusionsupport",
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

async function GameScore(chatId, historyIsClear = false) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		dataAboutUser.userAction = "GameScore";

		await bot.editMessageText(
			`<b>5Ô∏è‚É£:9Ô∏è‚É£ <i>–°—á—ë—Ç –æ—á–∫–æ–≤</i> 1Ô∏è‚É£:3Ô∏è‚É£\n\n–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ–º —Å—É–¥–∏—Ç—å? üßê</b>${
				scoreHistoryButtons.length != 0
					? `\n\n<a href ="https://t.me/${BotName}/?start=clearAllMatchHistory">–ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω—ã–µ</a>`
					: `${
							historyIsClear
								? "\n\n<i>–ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω—ã–µ –∏–≥—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã! üòâ</i>"
								: ""
					  }`
			}`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId === chatId)
					.messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						...scoreHistoryButtons,
						[
							{
								text: "üèÄ",
								callback_data: "CreationNewMatchWithSportNum1",
							},
							{
								text: "üèê",
								callback_data: "CreationNewMatchWithSportNum2",
							},
							{
								text: "‚öΩ",
								callback_data: "CreationNewMatchWithSportNum3",
							},
							{
								text: "üèì",
								callback_data: "CreationNewMatchWithSportNum4",
							},
						],
						[
							{ text: "‚¨ÖÔ∏è–í –º–µ–Ω—é", callback_data: "exit" },
							// {
							// 	text: "–°–≤–æ–π ‚öôÔ∏è",
							// 	callback_data: "CreationNewMatchWithSportNum5",
							// },
							{ text: "–ê –≥–¥–µ? ‚òπÔ∏è", callback_data: "netsporta" },
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

async function CreationNewMatch(
	chatId,
	matchId,
	sportNum = null,
	processOfNamingC1 = false,
	processOfNamingC2 = false,
	processOfAddScoreTarget = false,
	matchIdForCopySettigs = null
) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		if (!matchId) {
			do {
				rndId = Math.floor(Math.random() * 1000000000);
			} while (
				dataAboutUser.matchesData.some(
					(matchData) => matchData.matchId == rndId
				) &&
				dataAboutUser.matchesData.length != 0
			);
			await dataAboutUser.matchesData.push({
				matchId: rndId,
				sportNum: sportNum,
				score: "0:0",
				firstScoreTarget:
					sportNum == 1
						? 100
						: sportNum == 2
						? 25
						: sportNum == 3
						? 3
						: sportNum == 4
						? 11
						: sportNum == 5
						? 0
						: null,
				scoreTarget:
					sportNum == 1
						? 100
						: sportNum == 2
						? 25
						: sportNum == 3
						? 3
						: sportNum == 4
						? 11
						: sportNum == 5
						? 0
						: null,
				quarterOfGame: 1,
				startDate: null,
				startTime: null,
				timeOfAllGame: null,
				nameForCom1: "–°–∏–Ω–∏–µ",
				nameForCom2: "–ö—Ä–∞—Å–Ω—ã–µ",
				scoresInQuarters: [],
				matchIs–°reated: false,
				isOver: false,
			});

			matchId = rndId;
		}

		let dataAboutMatch = dataAboutUser.matchesData.find(
			(obj) => obj.matchId == matchId
		);

		if (
			matchIdForCopySettigs != null &&
			dataAboutUser.matchesData.find(
				(obj) => obj.matchId == matchIdForCopySettigs
			)
		) {
			let dataAboutMatchForCopySettings = dataAboutUser.matchesData.find(
				(obj) => obj.matchId == matchIdForCopySettigs
			);

			dataAboutMatch.sportNum = dataAboutMatchForCopySettings.sportNum;
			dataAboutMatch.nameForCom1 = dataAboutMatchForCopySettings.nameForCom1;
			dataAboutMatch.nameForCom2 = dataAboutMatchForCopySettings.nameForCom2;
			dataAboutMatch.scoreTarget =
				dataAboutMatchForCopySettings.firstScoreTarget;
			dataAboutMatch.firstScoreTarget =
				dataAboutMatchForCopySettings.firstScoreTarget;
		}

		dataAboutUser.currentMatchId = matchId;
		dataAboutUser.userAction = "CreationNewMatch";

		await bot.editMessageText(
			`<b><i>${
				dataAboutMatch.sportNum == 1
					? `üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª`
					: `${
							dataAboutMatch.sportNum == 2
								? `üèê –í–æ–ª–µ–π–±–æ–ª`
								: `${
										dataAboutMatch.sportNum == 3
											? `‚öΩ –§—É—Ç–±–æ–ª`
											: `${
													dataAboutMatch.sportNum == 4
														? `üèì –ü–∏–Ω–≥-–ü–æ–Ω–≥`
														: `${
																dataAboutMatch.sportNum == 5
																	? `‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π`
																	: ""
														  }`
											  }`
								  }`
					  }`
			}</i> ‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ‚öôÔ∏è\n\n–ö–æ–º–∞–Ω–¥—ã:</b>\n\n${
				dataAboutMatch.nameForCom1 && dataAboutMatch.nameForCom1 != "–°–∏–Ω–∏–µ"
					? `<a href = "https://t.me/${BotName}/?start=resetNameForCommand1InCreationNewMatchWithId${matchId}">üîÑÔ∏è</a> ${dataAboutMatch.nameForCom1}`
					: `${
							processOfNamingC1
								? `<a href="https://t.me/${BotName}/?start=CreationNewMatchWithId${matchId}">‚ùå</a> ...`
								: `<a href="https://t.me/${BotName}/?start=nameCommand1InCreationNewMatchWithId${matchId}">‚úèÔ∏è</a> –°–∏–Ω–∏–µ`
					  }`
			}  :  ${
				dataAboutMatch.nameForCom2 &&
				dataAboutMatch.nameForCom2 != "–ö—Ä–∞—Å–Ω—ã–µ"
					? `${dataAboutMatch.nameForCom2} <a href = "https://t.me/${BotName}/?start=resetNameForCommand2InCreationNewMatchWithId${matchId}">üîÑÔ∏è</a>`
					: `${
							processOfNamingC2
								? `... <a href="https://t.me/${BotName}/?start=CreationNewMatchWithId${matchId}">‚ùå</a>`
								: `–ö—Ä–∞—Å–Ω—ã–µ <a href="https://t.me/${BotName}/?start=nameCommand2InCreationNewMatchWithId${matchId}">‚úèÔ∏è</a>`
					  }`
			}\n\n<b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n\n–ü–æ —Å—á–µ—Ç—É: ${
				dataAboutMatch.scoreTarget == 0 && !processOfAddScoreTarget
					? `<b>–ù–µ—Ç <a href="https://t.me/${BotName}/?start=addScoreTargetInCreationNewMatchWithId${matchId}">‚úèÔ∏è</a></b>`
					: processOfAddScoreTarget
					? `<b>... <a href="https://t.me/${BotName}/?start=CreationNewMatchWithId${matchId}">‚ùå</a></b>`
					: `<b>–¥–æ ${dataAboutMatch.scoreTarget} ${
							(dataAboutMatch.scoreTarget % 100 >= 5 &&
								dataAboutMatch.scoreTarget % 100 <= 20) ||
							(dataAboutMatch.scoreTarget % 10 >= 5 &&
								dataAboutMatch.scoreTarget % 10 <= 9) ||
							dataAboutMatch.scoreTarget % 10 == 0
								? "–æ—á–∫–æ–≤"
								: `${
										dataAboutMatch.scoreTarget % 10 == 1
											? "–æ—á–∫–æ"
											: `${
													dataAboutMatch.scoreTarget % 10 >= 2 &&
													dataAboutMatch.scoreTarget % 10 <= 4
														? "–æ—á–∫–∞"
														: ``
											  }`
								  }`
					  }</b> <a href="https://t.me/${BotName}/?start=addScoreTargetInCreationNewMatchWithId${matchId}">‚úèÔ∏è</a>`
			}`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId == chatId).messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥ ",
								callback_data: `${
									dataAboutMatch.matchIs–°reated
										? `matchWithId${matchId}`
										: "gameScore"
								}`,
							},
							{
								text: `${
									dataAboutMatch.matchIs–°reated ? "" : "–ù–∞—á–∞—Ç—å ‚úÖ"
								}`,
								callback_data: `matchWithId${matchId}`,
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function GameScoreCounting(
	chatId,
	matchId = null,
	customCo1Score = null,
	customCo2Score = null,
	moreAboutQuarters = false
) {
	const dataAboutUser = usersData.find((obj) => obj.chatId === chatId);

	let co1Score,
		co2Score,
		dataAboutMatchText = "",
		dataAboutMatch;

	try {
		dataAboutMatch = dataAboutUser.matchesData.find(
			(obj) => obj.matchId == matchId
		);

		if (dataAboutUser.userAction == "CreationNewMatch") {
			dataAboutMatch.startDate = new Date();
			dataAboutMatch.startTime = new Date().toLocaleTimeString("ru-RU", {
				hour12: false,
				hour: "2-digit",
				minute: "2-digit",
				timeZone: "Europe/Moscow",
			});
			dataAboutMatch.matchIs–°reated = true;
		}

		dataAboutUser.userAction = "GameScoreCounting";

		[co1Score, co2Score] = dataAboutMatch.score.split(":").map(Number);

		dataAboutUser.currentMatchId = dataAboutMatch.matchId;

		co1Score = customCo1Score != null ? customCo1Score : co1Score;
		co2Score = customCo2Score != null ? customCo2Score : co2Score;

		if (customCo1Score != null || customCo2Score != null) {
			dataAboutMatch.score = `${parseInt(co1Score)} : ${parseInt(co2Score)}`;
		}

		if (dataAboutMatch.scoresInQuarters) {
			let i = 0;
			dataAboutMatch.scoresInQuarters.forEach((score) => {
				let [s1, s2] = score.split(":").map(Number);
				i++;
				dataAboutMatchText += `<b>‚Ä¢ ${i}-—è –ø–∞—Ä—Ç–∏—è</b>\n–°—á–µ—Ç:  <b>${s1} : ${s2}</b>\n\n`;
			});
		}

		await bot.editMessageText(
			`<b><i>${
				dataAboutMatch.sportNum == 1
					? `üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> ‚õπÔ∏è`
					: `${
							dataAboutMatch.sportNum == 2
								? `üèê –í–æ–ª–µ–π–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üèÉ`
								: `${
										dataAboutMatch.sportNum == 3
											? `‚öΩ –§—É—Ç–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üèÉ`
											: `${
													dataAboutMatch.sportNum == 4
														? `üèì –ü–∏–Ω–≥-–ü–æ–Ω–≥ ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üéæ`
														: `${
																dataAboutMatch.sportNum == 5
																	? `‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π  ‚Ä¢ <code>${dataAboutMatch.matchId}</code> ‚öôÔ∏è`
																	: ""
														  }`
											  }`
								  }`
					  }`
			}\n\n–î–∞–Ω–Ω—ã–µ –æ–± –∏–≥—Ä–µ:</i>\n\n${
				co1Score > co2Score
					? `<u>${dataAboutMatch.nameForCom1}</u>`
					: `${dataAboutMatch.nameForCom1}`
			} ${numberToEmoji(co1Score)}  :  ${numberToEmoji(co2Score)} ${
				co2Score > co1Score
					? `<u>${dataAboutMatch.nameForCom2}</u>`
					: `${dataAboutMatch.nameForCom2}`
			}${
				dataAboutMatch.scoreTarget
					? `\n</b>–û–≥—Ä:<b> –¥–æ ${dataAboutMatch.scoreTarget} ${
							(dataAboutMatch.scoreTarget >= 5 &&
								dataAboutMatch.scoreTarget <= 20) ||
							(dataAboutMatch.scoreTarget % 10 >= 5 &&
								dataAboutMatch.scoreTarget % 10 <= 9) ||
							dataAboutMatch.scoreTarget % 10 == 0
								? "–æ—á–∫–æ–≤"
								: `${
										dataAboutMatch.scoreTarget % 10 == 1
											? "–æ—á–∫–æ"
											: `${
													dataAboutMatch.scoreTarget % 10 >= 2 &&
													dataAboutMatch.scoreTarget % 10 <= 4
														? "–æ—á–∫–∞"
														: ``
											  }`
								  }`
					  }`
					: ``
			}\n\n</b>${
				moreAboutQuarters
					? `<blockquote><b><i>–ü–∞—Ä—Ç–∏–∏:\n\n</i>${dataAboutMatchText}‚Ä¢ ${
							dataAboutMatch.quarterOfGame
					  }-–π –ø–∞—Ä—Ç–∏—è\n–°—á–µ—Ç:  ${co1Score} : ${co2Score}\n\n</b>${
							dataAboutMatch.quarterOfGame > 1
								? `<a href="https://t.me/${BotName}/?start=moreAboutQuartersHideInCreationNewMatchWithId${matchId}">–°–∫—Ä—ã—Ç—å</a>\n`
								: ""
					  }</blockquote>`
					: `<blockquote><b><i>–ü–∞—Ä—Ç–∏–∏:\n\n</i>${
							dataAboutMatch.quarterOfGame
					  }-—è –ø–∞—Ä—Ç–∏—è</b>\n–°—á–µ—Ç:  <b>${co1Score} : ${co2Score}</b>\n${
							dataAboutMatch.quarterOfGame > 1
								? `<a href="https://t.me/${BotName}/?start=moreAboutQuartersShowInCreationNewMatchWithId${matchId}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ..</a>\n`
								: ""
					  }</blockquote>`
			}–ù–∞—á–∞–ª–æ: <b>–≤ ${
				dataAboutMatch.startTime
			}\n\n–ù–µ —Ç–µ—Ä—è–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å! üòâ</b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId === chatId)
					.messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: "‚¨ÜÔ∏è",
								callback_data: `upScore1WithId${matchId}`,
							},
							{
								text: `${dataAboutMatch.quarterOfGame}-–π`,
								callback_data: `addQuarterWithId${matchId}`,
							},
							{
								text: "‚¨ÜÔ∏è",
								callback_data: `upScore2WithId${matchId}`,
							},
						],
						[
							{
								text: `${
									dataAboutUser.writeco1score
										? `...`
										: `${numberToEmoji(co1Score)}`
								}`,
								callback_data: `toggleWriteScore1WithId${matchId}`,
							},
							{ text: ":", callback_data: "-" },
							{
								text: `${
									dataAboutUser.writeco2score
										? `...`
										: `${numberToEmoji(co2Score)}`
								}`,
								callback_data: `toggleWriteScore2WithId${matchId}`,
							},
						],
						[
							{
								text: `${co1Score > 0 ? `‚¨áÔ∏è` : "üö´"}`,
								callback_data: `${
									co1Score > 0 ? `downScore1WithId${matchId}` : "-"
								}`,
							},
							{
								text: "‚öôÔ∏è",
								callback_data: `settingsForMatchWithId${matchId}`,
							},
							{
								text: `${co2Score > 0 ? `‚¨áÔ∏è` : "üö´"}`,
								callback_data: `${
									co2Score > 0 ? `downScore2WithId${matchId}` : "-"
								}`,
							},
						],
						[
							{
								text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥",
								callback_data: `gameScore`,
							},
							{
								text: `${
									co1Score != 0 || co2Score != 0 ? "–ó–∞–≤–µ—Ä—à–∏—Ç—å‚ùå" : ""
								}`,
								callback_data: `endOfGameWithId${matchId}`,
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

function numberToEmoji(number) {
	const emojiDigits = [
		"0Ô∏è‚É£",
		"1Ô∏è‚É£",
		"2Ô∏è‚É£",
		"3Ô∏è‚É£",
		"4Ô∏è‚É£",
		"5Ô∏è‚É£",
		"6Ô∏è‚É£",
		"7Ô∏è‚É£",
		"8Ô∏è‚É£",
		"9Ô∏è‚É£",
	];
	return String(number)
		.split("")
		.map((digit) => emojiDigits[digit])
		.join("");
}

async function endOfGame(
	chatId,
	matchId,
	moreAboutQuarters = false,
	numOfStage = 1
) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);
	const dataAboutMatch = dataAboutUser.matchesData.find(
		(obj) => obj.matchId == matchId
	);

	let co1Score,
		co2Score,
		dataAboutMatchText = "";

	try {
		[co1Score, co2Score] = dataAboutMatch.score.split(":").map(Number);

		switch (numOfStage) {
			case 1:
				dataAboutUser.userAction = "endOfGame1";

				if (!dataAboutMatch.isOver) {
					await dataAboutMatch.scoresInQuarters.push(
						`${co1Score}:${co2Score}`
					);

					dataAboutMatch.isOver = true;
				}

				if (dataAboutMatch.timeOfAllGame == "") {
					dataAboutMatch.timeOfAllGame = new Date(
						Math.floor((new Date() - dataAboutMatch.startDate) / 1000) *
							1000
					)
						.toISOString()
						.substr(14, 5);
				}

				if (dataAboutMatch.scoresInQuarters && moreAboutQuarters) {
					let i = 0;
					dataAboutMatch.scoresInQuarters.forEach((score) => {
						let [s1, s2] = score.split(":").map(Number);
						i++;
						dataAboutMatchText += `\n\n<b>‚Ä¢ ${i}-–π –ø–∞—Ä—Ç–∏—è</b>\n–°—á–µ—Ç:  <b>${s1} : ${s2}</b>`;
					});
				}

				await bot.editMessageText(
					`<b><i>${
						dataAboutMatch.sportNum == 1
							? "üèÄ"
							: `${
									dataAboutMatch.sportNum == 2
										? "üèê"
										: `${
												dataAboutMatch.sportNum == 3
													? "‚öΩ"
													: `${
															dataAboutMatch.sportNum == 4
																? "üèì"
																: `${
																		dataAboutMatch.sportNum ==
																		5
																			? "‚öôÔ∏è"
																			: ``
																  }`
													  }`
										  }`
							  }`
					} –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞</i> ‚ùå\n\n${numberToEmoji(
						co1Score
					)} : ${numberToEmoji(co2Score)}\n\n${
						co1Score == co2Score
							? "ü§∑‚Äç‚ôÇÔ∏è –ù–∏—á—å—è ü§∑ \n"
							: co1Score > co2Score
							? `${dataAboutMatch.nameForCom1} - ${co1Score}ü•á`
							: co1Score < co2Score
							? `${dataAboutMatch.nameForCom2} - ${co2Score}ü•á`
							: ``
					}\n${
						co1Score == co2Score
							? ""
							: co1Score > co2Score
							? `${
									dataAboutMatch.nameForCom2
							  } - ${co2Score}ü•à\n\n</b>–û—Ç—Ä—ã–≤: <b>${
									co1Score - co2Score
							  } ${
									(co1Score - co2Score >= 5 &&
										co1Score - co2Score <= 20) ||
									(parseInt(co1Score - co2Score) % 10 >= 5 &&
										parseInt(co1Score - co2Score) % 10 <= 9)
										? "–æ—á–∫–æ–≤"
										: `${
												(co1Score - co2Score) % 10 == 1
													? "–æ—á–∫–æ"
													: `${
															(co1Score - co2Score) % 10 >= 2 &&
															(co1Score - co2Score) % 10 <= 4
																? "–æ—á–∫–∞"
																: ``
													  }`
										  }`
							  }\n`
							: co1Score < co2Score
							? `${
									dataAboutMatch.nameForCom1
							  } - ${co1Score}ü•à\n\n</b>–û—Ç—Ä—ã–≤: <b>${
									co2Score - co1Score
							  } ${
									(co2Score - co1Score >= 5 &&
										co2Score - co1Score <= 20) ||
									(parseInt(co2Score - co1Score) % 10 >= 5 &&
										parseInt(co2Score - co1Score) % 10 <= 9)
										? "–æ—á–∫–æ–≤"
										: `${
												(co2Score - co1Score) % 10 == 1
													? "–æ—á–∫–æ"
													: `${
															(co2Score - co1Score) % 10 >= 2 &&
															(co2Score - co1Score) % 10 <= 4
																? "–æ—á–∫–∞"
																: ``
													  }`
										  }`
							  }\n`
							: ``
					}</b>–ù–∞—á–∞–ª–æ: <b>–≤ ${
						dataAboutMatch.startTime
					}</b>\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <b>${dataAboutMatch.timeOfAllGame}</b>${
						moreAboutQuarters
							? `\n<blockquote>–ü–∞—Ä—Ç–∏–π: <b>${dataAboutMatch.quarterOfGame} - <a href="https://t.me/${BotName}/?start=moreAboutQuartersHideInEndOfGameWithId${matchId}">c–∫—Ä—ã—Ç—å</a>${dataAboutMatchText}</b></blockquote>\n\n<b>Id –º–∞—Ç—á–∞:</b> <code>${matchId}</code>`
							: `<blockquote>–ü–∞—Ä—Ç–∏–π: <b>${dataAboutMatch.quarterOfGame} - <a href="https://t.me/${BotName}/?start=moreAboutQuartersShowInEndOfGameWithId${matchId}">–ø–æ–¥—Ä–æ–±–Ω–µ–µ</a></b></blockquote>`
					}`,
					{
						parse_mode: "html",
						chat_id: chatId,
						message_id: usersData.find((obj) => obj.chatId == chatId)
							.messageId,
						disable_web_page_preview: true,
						reply_markup: {
							inline_keyboard: [
								[
									{
										text: `${
											dataAboutMatch.sportNum == 1
												? "üèÄ"
												: `${
														dataAboutMatch.sportNum == 2
															? "üèê"
															: `${
																	dataAboutMatch.sportNum == 3
																		? "‚öΩ"
																		: `${
																				dataAboutMatch.sportNum ==
																				4
																					? "üèì"
																					: `${
																							dataAboutMatch.sportNum ==
																							5
																								? "‚öôÔ∏è"
																								: ``
																					  }`
																		  }`
															  }`
												  }`
										} –†–µ–≤–∞–Ω—à üîÑÔ∏è`,
										callback_data: `copySettingsFromMatchWithId${dataAboutMatch.matchId}`,
									},
								],
								[
									{
										text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥",
										callback_data: `gameScore`,
									},

									{
										text: "–ò—Å—Ç–æ—Ä–∏—è üíæ",
										callback_data: "historyOfMatches",
									},
								],
							],
						},
					}
				);
				break;
			case 2:
				dataAboutUser.userAction = "endOfGame2";

				dataAboutMatch.scoreTarget = 0;

				await bot.editMessageText(
					`<b><i>${
						dataAboutMatch.sportNum == 1
							? `üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> ‚õπÔ∏è`
							: `${
									dataAboutMatch.sportNum == 2
										? `üèê –í–æ–ª–µ–π–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üèÉ`
										: `${
												dataAboutMatch.sportNum == 3
													? `‚öΩ –§—É—Ç–±–æ–ª ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üèÉ`
													: `${
															dataAboutMatch.sportNum == 4
																? `üèì –ü–∏–Ω–≥-–ü–æ–Ω–≥ ‚Ä¢ <code>${dataAboutMatch.matchId}</code> üéæ`
																: `${
																		dataAboutMatch.sportNum ==
																		5
																			? `‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π  ‚Ä¢ <code>${dataAboutMatch.matchId}</code> ‚öôÔ∏è`
																			: ""
																  }`
													  }`
										  }`
							  }`
					}</i>\n\n${
						co1Score > co2Score
							? `<u>${dataAboutMatch.nameForCom1}</u>`
							: `${dataAboutMatch.nameForCom1}`
					} ${numberToEmoji(co1Score)}  :  ${numberToEmoji(co2Score)} ${
						co2Score > co1Score
							? `<u>${dataAboutMatch.nameForCom2}</u>`
							: `${dataAboutMatch.nameForCom2}`
					}</b>\n\n${
						co1Score > co2Score
							? `–ö–æ–º–∞–Ω–¥–∞ <b>"${
									dataAboutMatch.nameForCom1
							  }"</b> - –¥–æ—Å—Ç–∏–≥–ª–∞ –æ—Ç–º–µ—Ç–∫–∏ –≤ <b>${co1Score} ${
									(co1Score >= 5 && co1Score <= 20) ||
									(co1Score % 10 >= 5 && co1Score % 10 <= 9) ||
									co1Score % 10 == 0
										? "–æ—á–∫–æ–≤"
										: `${
												co1Score % 10 == 1
													? "–æ—á–∫–æ"
													: `${
															co1Score % 10 >= 2 &&
															co1Score % 10 <= 4
																? "–æ—á–∫–∞"
																: ``
													  }`
										  }`
							  }!</b>`
							: co1Score < co2Score
							? `–ö–æ–º–∞–Ω–¥–∞ <b>"${
									dataAboutMatch.nameForCom2
							  }"</b> - –¥–æ—Å—Ç–∏–≥–ª–∞ –æ—Ç–º–µ—Ç–∫–∏ –≤ <b>${co2Score} ${
									(co2Score >= 5 && co2Score <= 20) ||
									(co2Score % 10 >= 5 && co2Score % 10 <= 9) ||
									co2Score % 10 == 0
										? "–æ—á–∫–æ–≤"
										: `${
												co2Score % 10 == 1
													? "–æ—á–∫–æ"
													: `${
															co2Score % 10 >= 2 &&
															co2Score % 10 <= 4
																? "–æ—á–∫–∞"
																: ``
													  }`
										  }`
							  }!</b>`
							: ``
					}\n\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∞—Ç—á <b>${
						dataAboutMatch.quarterOfGame + 1 == 2 ? "–≤–æ" : "–≤"
					} ${dataAboutMatch.quarterOfGame + 1}-–π –ø–∞—Ä—Ç–∏–∏ –¥–æ ${parseInt(
						dataAboutMatch.firstScoreTarget *
							(dataAboutMatch.quarterOfGame + 1)
					)} ${
						(parseInt(
							dataAboutMatch.firstScoreTarget *
								(dataAboutMatch.quarterOfGame + 1)
						) >= 5 &&
							parseInt(
								dataAboutMatch.firstScoreTarget *
									(dataAboutMatch.quarterOfGame + 1)
							) <= 20) ||
						(parseInt(
							dataAboutMatch.firstScoreTarget *
								(dataAboutMatch.quarterOfGame + 1)
						) %
							10 >=
							5 &&
							parseInt(
								dataAboutMatch.firstScoreTarget *
									(dataAboutMatch.quarterOfGame + 1)
							) %
								10 <=
								9) ||
						parseInt(
							dataAboutMatch.firstScoreTarget *
								(dataAboutMatch.quarterOfGame + 1)
						) %
							10 ==
							0
							? "–æ—á–∫–æ–≤"
							: `${
									parseInt(
										dataAboutMatch.firstScoreTarget *
											(dataAboutMatch.quarterOfGame + 1)
									) %
										10 ==
									1
										? "–æ—á–∫–∞"
										: `${
												parseInt(
													dataAboutMatch.firstScoreTarget *
														(dataAboutMatch.quarterOfGame + 1)
												) %
													10 >=
													2 &&
												parseInt(
													dataAboutMatch.firstScoreTarget *
														(dataAboutMatch.quarterOfGame + 1)
												) %
													10 <=
													4
													? "–æ—á–∫–æ–≤"
													: ``
										  }`
							  }`
					},</b> –∏–ª–∏ <b>–∑–∞–≤–µ—Ä—à–∏—Ç—å –µ–≥–æ —Å —Ç–µ–∫—É—â–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º?</b> ü§î`,
					{
						parse_mode: "html",
						chat_id: chatId,
						message_id: usersData.find((obj) => obj.chatId == chatId)
							.messageId,
						disable_web_page_preview: true,
						reply_markup: {
							inline_keyboard: [
								[
									{
										text: `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ( ${
											dataAboutMatch.quarterOfGame + 1 == 2
												? "–≤–æ"
												: "–≤"
										} ${
											dataAboutMatch.quarterOfGame + 1
										}-–º –ø–∞—Ä—Ç ) ‚úÖ`,
										callback_data: `continueAndAddQuarterForMatchWithId${dataAboutMatch.matchId}`,
									},
								],
								[
									{
										text: "‚¨ÖÔ∏è–ë–µ–∑ –ø–∞—Ä—Ç–∏–π",
										callback_data: `matchWithId${dataAboutMatch.matchId}`,
									},
									{
										text: "–ó–∞–≤–µ—Ä—à–∏—Ç—å ‚ùå",
										callback_data: `endOfGameWithId${dataAboutMatch.matchId}`,
									},
								],
							],
						},
					}
				);
				break;
		}
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function historyOfMatches(chatId, sportNumForHistory = 0) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);
	try {
		let historyOfMatchesText = "";

		switch (sportNumForHistory) {
			case 0:
				if (dataAboutUser.matchesData.filter((obj) => obj.isOver)) {
					historyOfMatchesText = `<b>–í—Å–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `${
								matchData.sportNum == 1
									? "üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª"
									: `${
											matchData.sportNum == 2
												? "üèê –í–æ–ª–µ–π–±–æ–ª"
												: `${
														matchData.sportNum == 3
															? "‚öΩ –§—É—Ç–±–æ–ª"
															: `${
																	matchData.sportNum == 4
																		? "üèì –ü–∏–Ω–≥-–ø–æ–Ω–≥"
																		: `${
																				matchData.sportNum ==
																				5
																					? "‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π"
																					: ``
																		  }`
															  }`
												  }`
									  }`
							} ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.</b>\n<b><a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}

				break;
			case 1:
				if (
					dataAboutUser.matchesData.filter(
						(obj) => obj.isOver && obj.sportNum == 1
					)
				) {
					historyOfMatchesText = `<b>–¢–æ–ª—å–∫–æ –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver && obj.sportNum == 1)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.\n<a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}
				break;
			case 2:
				if (
					dataAboutUser.matchesData.filter(
						(obj) => obj.isOver && obj.sportNum == 2
					)
				) {
					historyOfMatchesText = `<b>–¢–æ–ª—å–∫–æ –≤–æ–ª–µ–π–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver && obj.sportNum == 2)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `üèê –í–æ–ª–µ–π–±–æ–ª ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.\n<a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}
				break;
			case 3:
				if (
					dataAboutUser.matchesData.filter(
						(obj) => obj.isOver && obj.sportNum == 3
					)
				) {
					historyOfMatchesText = `<b>–¢–æ–ª—å–∫–æ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver && obj.sportNum == 3)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `‚öΩ –§—É—Ç–±–æ–ª ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.\n<a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}
				break;
			case 4:
				if (
					dataAboutUser.matchesData.filter(
						(obj) => obj.isOver && obj.sportNum == 4
					)
				) {
					historyOfMatchesText = `<b>–¢–æ–ª—å–∫–æ —Ç–µ–Ω–Ω–∏—Å–Ω—ã–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver && obj.sportNum == 4)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `üèì –ü–∏–Ω–≥-–ø–æ–Ω–≥ ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.\n<a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}
				break;
			case 5:
				if (
					dataAboutUser.matchesData.filter(
						(obj) => obj.isOver && obj.sportNum == 5
					)
				) {
					historyOfMatchesText = `<b>–¢–æ–ª—å–∫–æ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–∞—Ç—á–∏:\n\n</b>`;
					dataAboutUser.matchesData
						.filter((obj) => obj.isOver && obj.sportNum == 5)
						.forEach((matchData) => {
							let [co1Score, co2Score] = matchData.score
								.split(":")
								.map(Number);

							historyOfMatchesText += `‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π ‚Ä¢ ${matchData.startDate.getDate()}.${
								matchData.startDate.getMonth() + 1
							}.${matchData.startDate
								.getFullYear()
								.toString()
								.slice(-2)}\n<b>${co1Score}  :  ${co2Score}  -  ${
								matchData.quarterOfGame
							} –ø–∞—Ä—Ç.\n<a href="https://t.me/${BotName}/?start=moreAboutMatchWithId${
								matchData.matchId
							}">–û –º–∞—Ç—á–µ</a> ‚Ä¢ <a href="https://t.me/${BotName}/?start=copySettingsFromMatchWithId${
								matchData.matchId
							}">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</a></b>\n\n`;
						});
				}
				break;
		}

		await bot.editMessageText(
			`<b><i>‚åõ –ò—Å—Ç–æ—Ä–∏—è –º–∞—Ç—á–µ–π üíæ</i></b>\n\n${
				historyOfMatchesText &&
				historyOfMatchesText != "<b>–í—Å–µ –º–∞—Ç—á–∏:\n\n</b>"
					? `${historyOfMatchesText}–í—Å–µ–≥–æ: <b>${
							sportNumForHistory == 0
								? `${
										dataAboutUser.matchesData.filter(
											(obj) => obj.isOver
										).length
								  } ${
										(dataAboutUser.matchesData.filter(
											(obj) => obj.isOver
										).length >= 5 &&
											dataAboutUser.matchesData.filter(
												(obj) => obj.isOver
											).length <= 20) ||
										(dataAboutUser.matchesData.filter(
											(obj) => obj.isOver
										).length %
											10 >=
											5 &&
											dataAboutUser.matchesData.filter(
												(obj) => obj.isOver
											).length %
												10 <=
												9) ||
										dataAboutUser.matchesData.filter(
											(obj) => obj.isOver
										).length %
											10 ==
											0
											? "–∏–≥—Ä"
											: `${
													dataAboutUser.matchesData.filter(
														(obj) => obj.isOver
													).length %
														10 ==
													1
														? "–∏–≥—Ä–∞"
														: `${
																dataAboutUser.matchesData.filter(
																	(obj) => obj.isOver
																).length %
																	10 >=
																	2 &&
																dataAboutUser.matchesData.filter(
																	(obj) => obj.isOver
																).length %
																	10 <=
																	4
																	? "–∏–≥—Ä—ã"
																	: ``
														  }`
											  }`
								  }`
								: `${
										dataAboutUser.matchesData.filter(
											(obj) =>
												obj.isOver &&
												obj.sportNum == sportNumForHistory
										).length
								  } ${
										(dataAboutUser.matchesData.filter(
											(obj) =>
												obj.isOver &&
												obj.sportNum == sportNumForHistory
										).length >= 5 &&
											dataAboutUser.matchesData.filter(
												(obj) =>
													obj.isOver &&
													obj.sportNum == sportNumForHistory
											).length <= 20) ||
										(dataAboutUser.matchesData.filter(
											(obj) =>
												obj.isOver &&
												obj.sportNum == sportNumForHistory
										).length %
											10 >=
											5 &&
											dataAboutUser.matchesData.filter(
												(obj) =>
													obj.isOver &&
													obj.sportNum == sportNumForHistory
											).length %
												10 <=
												9) ||
										dataAboutUser.matchesData.filter(
											(obj) =>
												obj.isOver &&
												obj.sportNum == sportNumForHistory
										).length %
											10 ==
											0
											? "–∏–≥—Ä"
											: `${
													dataAboutUser.matchesData.filter(
														(obj) =>
															obj.isOver &&
															obj.sportNum == sportNumForHistory
													).length %
														10 ==
													1
														? "–∏–≥—Ä–∞"
														: `${
																dataAboutUser.matchesData.filter(
																	(obj) =>
																		obj.isOver &&
																		obj.sportNum ==
																			sportNumForHistory
																).length %
																	10 >=
																	2 &&
																dataAboutUser.matchesData.filter(
																	(obj) =>
																		obj.isOver &&
																		obj.sportNum ==
																			sportNumForHistory
																).length %
																	10 <=
																	4
																	? "–∏–≥—Ä—ã"
																	: ``
														  }`
											  }`
								  }`
					  }</b>`
					: `–ò—Å—Ç–æ—Ä–∏—è –º–∞—Ç—á–µ–π –ø—É—Å—Ç–∞! üèùÔ∏è`
			}`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId == chatId).messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: `${sportNumForHistory == 0 ? `‚Ä¢ –í—Å–µ ‚Ä¢` : `–í—Å–µ`}`,
								callback_data: `${
									sportNumForHistory == 0
										? `-`
										: `historyOfMatchesWithSportNumForHistory0`
								}`,
							},
							{
								text: `${
									dataAboutUser.matchesData.filter(
										(obj) => obj.isOver && obj.sportNum == 1
									).length > 0
										? `${sportNumForHistory == 1 ? `‚Ä¢ üèÄ ‚Ä¢` : `üèÄ`}`
										: ``
								}`,
								callback_data: `${
									sportNumForHistory == 1
										? `-`
										: `historyOfMatchesWithSportNumForHistory1`
								}`,
							},
							{
								text: `${
									dataAboutUser.matchesData.filter(
										(obj) => obj.isOver && obj.sportNum == 2
									).length > 0
										? `${sportNumForHistory == 2 ? `‚Ä¢ üèê ‚Ä¢` : `üèê`}`
										: ``
								}`,
								callback_data: `${
									sportNumForHistory == 2
										? `-`
										: `historyOfMatchesWithSportNumForHistory2`
								}`,
							},
							{
								text: `${
									dataAboutUser.matchesData.filter(
										(obj) => obj.isOver && obj.sportNum == 3
									).length > 0
										? `${sportNumForHistory == 3 ? `‚Ä¢ ‚öΩ ‚Ä¢` : `‚öΩ`}`
										: ``
								}`,
								callback_data: `${
									sportNumForHistory == 3
										? `-`
										: `historyOfMatchesWithSportNumForHistory3`
								}`,
							},
							{
								text: `${
									dataAboutUser.matchesData.filter(
										(obj) => obj.isOver && obj.sportNum == 4
									).length > 0
										? `${sportNumForHistory == 4 ? `‚Ä¢ üèì ‚Ä¢` : `üèì`}`
										: ``
								}`,
								callback_data: `${
									sportNumForHistory == 4
										? `-`
										: `historyOfMatchesWithSportNumForHistory4`
								}`,
							},
							// {
							// 	text: `${sportNumForHistory == 5 ? `‚Ä¢ ‚öôÔ∏è ‚Ä¢` : `‚öôÔ∏è`}`,
							// 	callback_data: `${
							// 		sportNumForHistory == 5
							// 			? `-`
							// 			: `historyOfMatchesWithSportNumForHistory5`
							// 	}`,
							// },
						],
						[
							{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "settings" },
							{ text: "–û–±–Ω–æ–≤–∏—Ç—åüîÑÔ∏è", callback_data: "historyOfMatches" },
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function moreAboutMatch(chatId, matchId) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);
	const dataAboutMatch = dataAboutUser.matchesData.find(
		(obj) => obj.matchId == matchId
	);

	try {
		let dataAboutMatchText = "";
		let [co1Score, co2Score] = dataAboutMatch.score.split(":").map(Number);

		let i = 1;
		dataAboutMatch.scoresInQuarters.forEach((score) => {
			let [s1, s2] = score.split(":").map(Number);
			dataAboutMatchText += `\n\n<b>‚Ä¢ ${i}-—è –ø–∞—Ä—Ç–∏—è</b>\n–°—á–µ—Ç:  <b>${s1} : ${s2}</b>`;
			i++;
		});

		await bot.editMessageText(
			`<b>‚ÑπÔ∏è –û –º–∞—Ç—á–µ ‚Ä¢ <i>${
				dataAboutMatch.sportNum == 1
					? `–ë–∞—Å–∫–µ—Ç–±–æ–ª üèÄ`
					: `${
							dataAboutMatch.sportNum == 2
								? `–í–æ–ª–µ–π–±–æ–ª üèê`
								: `${
										dataAboutMatch.sportNum == 3
											? `–§—É—Ç–±–æ–ª ‚öΩ`
											: `${
													dataAboutMatch.sportNum == 4
														? `–ü–∏–Ω–≥-–ü–æ–Ω–≥ üèì`
														: `${
																dataAboutMatch.sportNum == 5
																	? `–ö–∞—Å—Ç–æ–º–Ω—ã–π ‚öôÔ∏è`
																	: ""
														  }`
											  }`
								  }`
					  }`
			}</i>\n\n${numberToEmoji(co1Score)} : ${numberToEmoji(co2Score)}\n\n${
				co1Score == co2Score
					? "ü§∑‚Äç‚ôÇÔ∏è –ù–∏—á—å—è ü§∑ \n"
					: co1Score > co2Score
					? `${dataAboutMatch.nameForCom1} - ${co1Score}ü•á`
					: co1Score < co2Score
					? `${dataAboutMatch.nameForCom2} - ${co2Score}ü•á`
					: ``
			}\n${
				co1Score == co2Score
					? ""
					: co1Score > co2Score
					? `${
							dataAboutMatch.nameForCom2
					  } - ${co2Score}ü•à\n\n</b>–û—Ç—Ä—ã–≤: <b>${co1Score - co2Score} ${
							(co1Score - co2Score >= 5 && co1Score - co2Score <= 20) ||
							(parseInt(co1Score - co2Score) % 10 >= 5 &&
								parseInt(co1Score - co2Score) % 10 <= 9)
								? "–æ—á–∫–æ–≤"
								: `${
										(co1Score - co2Score) % 10 == 1
											? "–æ—á–∫–æ"
											: `${
													(co1Score - co2Score) % 10 >= 2 &&
													(co1Score - co2Score) % 10 <= 4
														? "–æ—á–∫–∞"
														: ``
											  }`
								  }`
					  }\n`
					: co1Score < co2Score
					? `${
							dataAboutMatch.nameForCom1
					  } - ${co1Score}ü•à\n\n</b>–û—Ç—Ä—ã–≤: <b>${co2Score - co1Score} ${
							(co2Score - co1Score >= 5 && co2Score - co1Score <= 20) ||
							(parseInt(co2Score - co1Score) % 10 >= 5 &&
								parseInt(co2Score - co1Score) % 10 <= 9)
								? "–æ—á–∫–æ–≤"
								: `${
										(co2Score - co1Score) % 10 == 1
											? "–æ—á–∫–æ"
											: `${
													(co2Score - co1Score) % 10 >= 2 &&
													(co2Score - co1Score) % 10 <= 4
														? "–æ—á–∫–∞"
														: ``
											  }`
								  }`
					  }\n`
					: ``
			}</b>–ù–∞—á–∞–ª–æ: <b>–≤ ${dataAboutMatch.startTime}</b>\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <b>${
				dataAboutMatch.timeOfAllGame
			}</b>\n<blockquote>–ü–∞—Ä—Ç–∏–π: <b>${
				dataAboutMatch.quarterOfGame
			}${dataAboutMatchText}</b></blockquote>\n\n<b>Id –º–∞—Ç—á–∞:</b> <code>${matchId}</code>
			`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId == chatId).messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "historyOfMatches" },
							{
								text: "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å üîÑÔ∏è",
								callback_data: `copySettingsFromMatchWithId${dataAboutMatch.matchId}`,
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function Motivation(chatId) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		rndNum = Math.floor(Math.random() * motivationPhrases.length);

		bot.editMessageText(
			`<b><i>üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è ü¶Ö</i>\n\n<code>"${motivationPhrases[rndNum]}"</code>\n\n¬© ChatGPT</b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId == chatId).messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{ text: "‚¨ÖÔ∏è–í –º–µ–Ω—é", callback_data: "exit" },
							{ text: "–ï—â–µ üîÑÔ∏è", callback_data: "motivation" },
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
		sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
	}
}

async function Settings(chatId) {
	const dataAboutUser = usersData.find((obj) => obj.chatId === chatId);

	try {
		await bot.editMessageText(
			`<b><i>üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Ä¢ <code>${chatId}</code> ‚öôÔ∏è</i>\n\n–î–∞–Ω–Ω—ã–µ:\n</b>–õ–æ–≥–∏–Ω —á–µ–º–ø–∏–æ–Ω–∞: <b>${dataAboutUser.login}\n\n</b>–†–∞–∑–¥–µ–ª –≤ <b>–±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏! üòâ</b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId === chatId)
					.messageId,
				reply_markup: {
					inline_keyboard: [
						[{ text: "–ò—Å—Ç–æ—Ä–∏—è üíæ", callback_data: "historyOfMatches" }],
						[
							{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "exit" },
							{
								text: "digfusion‚ùî",
								callback_data: "moreAboutUs",
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

async function moreAboutUs(chatId) {
	const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

	try {
		await bot.editMessageText(
			`<b><i>‚ùîdigfusion ‚Ä¢ –û –Ω–∞—Å üíÅüèª‚Äç‚ôÇÔ∏è</i></b>\n\n–ö–æ–º–ø–∞–Ω–∏—è <b><i>digfusion</i></b> - <b>–Ω–∞—á–∏–Ω–∞—é—â–∏–π —Å—Ç–∞—Ä—Ç–∞–ø,</b> —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π <b>—Å–≤–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</b> –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π —É—Å–ª—É–≥–∏ –ø–æ <b>—Å–æ–∑–¥–∞–Ω–∏—é —á–∞—Ç-–±–æ—Ç–æ–≤</b> —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤! ‚òëÔ∏è\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ <b>–Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã, —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã, –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥</b> –∏ <b>–ø—Ä–æ—á—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏</b> –º–æ–∂–Ω–æ –≤ –Ω–∞—à–µ–º <b>Telegram –∫–∞–Ω–∞–ª–µ</b> –∏ <b>–±–æ—Ç–µ-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–µ! ü§ó\n\n<a href="https://t.me/digfusion">digfusion | –∏–Ω—Ñ–æ</a> ‚Ä¢ <a href="https://t.me/digfusionbot">digfusion | —É—Å–ª—É–≥–∏</a></b>`,
			{
				parse_mode: "html",
				chat_id: chatId,
				message_id: usersData.find((obj) => obj.chatId == chatId).messageId,
				disable_web_page_preview: true,
				reply_markup: {
					inline_keyboard: [
						[
							{ text: "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data: "settings" },
							{
								text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üí≠",
								url: "https://t.me/digfusionsupport",
							},
						],
					],
				},
			}
		);
	} catch (error) {
		console.log(error);
	}
}

async function StartAll() {
	try {
		if (TOKEN == config.TOKENs[0]) {
			BotName = "digtestingbot";
		} else if (TOKEN == config.TOKENs[1]) {
			BotName = "digjudgebot";
		}

		bot.on("text", async (message) => {
			const chatId = message.chat.id;
			const text = message.text;

			const dataAboutUser = usersData.find((obj) => obj.chatId == chatId);

			try {
				if (!usersData.find((obj) => obj.chatId === chatId)) {
					usersData.push({
						chatId: chatId,
						login: message.from.first_name,
						telegramFirstName: message.from.first_name,
						messageId: message.message_id,
						userAction: null,
						currentMatchId: null,
						currentSportNum: null,

						matchesData: [],

						// –ø—Ä–æ—á–∏–µ
						writeco1score: false,
						writeco2score: false,
						writeNameForCo1: false,
						writeNameForCo2: false,
						writeScoreTarget: false,
					});
				}

				const dataAboutUser = usersData.find(
					(obj) => obj.chatId === chatId
				);

				if (dataAboutUser || text == "/start" || text == "/restart") {
					if (
						dataAboutUser &&
						dataAboutUser.userAction == "firstMeeting2" &&
						!text.includes("/")
					) {
						dataAboutUser.login = text;

						menuHome(chatId);
					}

					//? –ö–ù–û–ü–ö–ò-–°–°–´–õ–ö–ò

					switch (true) {
						case text.includes("/start moreAboutQuarters"):
							match = text.match(
								/^\/start moreAboutQuarters(.*)In(.*)WithId(\d+)$/
							);

							if (match[2] == "GameScoreCounting") {
								GameScoreCounting(
									chatId,
									parseInt(match[3]),
									null,
									null,
									match[1] == "Hide" ? false : true
								);
							}
							if (match[2] == "EndOfGame") {
								endOfGame(
									chatId,
									parseInt(match[3]),
									match[1] == "Hide" ? false : true
								);
							}
							break;
						case text.includes("/start nameCommand"):
							match = text.match(
								/^\/start nameCommand(\d+)InCreationNewMatchWithId(\d+)$/
							);

							match[1] == 1
								? (dataAboutUser.writeNameForCo1 = true)
								: (dataAboutUser.writeNameForCo1 = false);
							match[1] == 2
								? (dataAboutUser.writeNameForCo2 = true)
								: (dataAboutUser.writeNameForCo2 = false);

							CreationNewMatch(
								chatId,
								match[2],
								null,
								match[1] == 1 ? true : false,
								match[1] == 2 ? true : false
							);

							break;
						case text.includes("/start CreationNewMatchWithId"):
							match = text.match(
								/^\/start CreationNewMatchWithId(\d+)$/
							);
							CreationNewMatch(chatId, match[2]);
							break;
						case text.includes("/start resetNameForCommand"):
							match = text.match(
								/^\/start resetNameForCommand(\d+)InCreationNewMatchWithId(\d+)$/
							);

							if (dataAboutUser.matchesData) {
								match[1] == 1
									? (dataAboutUser.matchesData.find(
											(obj) => obj.matchId == match[2]
									  ).nameForCom1 = "–°–∏–Ω–∏–µ")
									: (dataAboutUser.matchesData.find(
											(obj) => obj.matchId == match[2]
									  ).nameForCom2 = "–ö—Ä–∞—Å–Ω—ã–µ");
							}

							CreationNewMatch(chatId, match[2], null);
							break;
						case text.includes(
							"/start addScoreTargetInCreationNewMatchWithId"
						):
							match = text.match(
								/^\/start addScoreTargetInCreationNewMatchWithId(\d+)$/
							);

							dataAboutUser.writeScoreTarget = true;

							CreationNewMatch(chatId, match[1], null, null, null, true);
							break;

						case text.includes("/start moreAboutMatchWithId"):
							match = text.match(/^\/start moreAboutMatchWithId(\d+)$/);

							moreAboutMatch(chatId, match[1]);

							break;
						case text.includes("/start copySettingsFromMatchWithId"):
							match = text.match(
								/^\/start copySettingsFromMatchWithId(\d+)$/
							);

							CreationNewMatch(
								chatId,
								null,
								null,
								null,
								null,
								null,
								parseInt(match[1])
							);

							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
						case 1:
							break;
					}

					if (dataAboutUser && /^\d+$/.test(text)) {
						if (dataAboutUser.writeco1score) {
							dataAboutUser.writeco1score = false;

							GameScoreCounting(
								chatId,
								dataAboutUser.currentMatchId,
								parseInt(text),
								null
							);
						} else if (dataAboutUser.writeco2score) {
							dataAboutUser.writeco2score = false;

							GameScoreCounting(
								chatId,
								dataAboutUser.currentMatchId,
								null,
								parseInt(text)
							);
						}
					}

					if (
						dataAboutUser &&
						dataAboutUser.userAction == "CreationNewMatch" &&
						!text.includes("/start") &&
						(dataAboutUser.writeNameForCo1 ||
							dataAboutUser.writeNameForCo2 ||
							(dataAboutUser.writeScoreTarget && /^\d+$/.test(text)))
					) {
						dataAboutUser.writeNameForCo1 && dataAboutUser.matchesData
							? ((dataAboutUser.matchesData.find(
									(obj) => obj.matchId == dataAboutUser.currentMatchId
							  ).nameForCom1 = text),
							  (dataAboutUser.writeNameForCo1 = false))
							: dataAboutUser.writeNameForCo2 &&
							  dataAboutUser.matchesData
							? ((dataAboutUser.matchesData.find(
									(obj) => obj.matchId == dataAboutUser.currentMatchId
							  ).nameForCom2 = text),
							  (dataAboutUser.writeNameForCo2 = false))
							: ``;

						dataAboutUser.writeScoreTarget && /^\d+$/.test(text)
							? ((dataAboutUser.matchesData.find(
									(obj) => obj.matchId == dataAboutUser.currentMatchId
							  ).scoreTarget = parseInt(text)),
							  (dataAboutUser.matchesData.find(
									(obj) => obj.matchId == dataAboutUser.currentMatchId
							  ).firstScoreTarget = parseInt(text)),
							  (dataAboutUser.writeScoreTarget = false))
							: ``;

						CreationNewMatch(chatId, dataAboutUser.currentMatchId);
					}

					//? –ö–û–ú–ê–ù–î–´

					switch (text) {
						case "St":
						case "st":
						case "–´–µ":
						case "—ã–µ":
							if (chatId == qu1z3xId) {
								await bot
									.sendMessage(chatId, "„Ö§")
									.then(
										(message) =>
											(dataAboutUser.messageId = message.message_id)
									);
								menuHome(chatId);
							}
							break;
						case "/restart":
							if (chatId == qu1z3xId || chatId == jackId) {
								await bot
									.sendMessage(chatId, "„Ö§")
									.then(
										(message) =>
											(dataAboutUser.messageId = message.message_id)
									);

								menuHome(chatId);
								break;
							}
						case "/start":
							await bot
								.sendMessage(chatId, "„Ö§")
								.then(
									(message) =>
										(dataAboutUser.messageId = message.message_id)
								);

							firstMeeting(chatId, 1);
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "/start clearAllMatchHistory":
							dataAboutUser.matchesData.forEach((match) => {
								match.isOver = true;
							});
							scoreHistoryButtons = [];
							GameScore(chatId, true);
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						case "":
							break;
						default:
							break;
					}
				}
				bot.deleteMessage(chatId, message.message_id);

				if (chatId != qu1z3xId && chatId != jackId) {
					sendDataAboutText(chatId, dataAboutUser.login, text);
				}
			} catch (error) {
				console.log(error);
				sendDataAboutError(chatId, dataAboutUser.login, `${String(error)}`);
			}
		});

		//? –ö–õ–ê–í–ò–ê–¢–£–†–ê

		bot.on("callback_query", async (query) => {
			const chatId = query.message.chat.id;
			const data = query.data;

			const dataAboutUser = usersData.find((obj) => obj.chatId === chatId);

			if (dataAboutUser) {
				dataAboutUser.messageId = query.message.message_id;

				if (data.includes("firstMeeting")) {
					match = data.match(/^firstMeeting(\d+)$/);

					firstMeeting(chatId, parseInt(match[1]));
				}

				let matchId,
					co1Score = 0,
					co2Score = 0;
				if (data.includes("upScore") || data.includes("downScore")) {
					dataAboutUser.writeco1score = false;
					dataAboutUser.writeco2score = false;

					if (data.includes("upScore")) {
						match = data.match(/^upScore(\d+)WithId(\d+)$/);
						matchId = parseInt(match[2]);

						[co1Score, co2Score] = dataAboutUser.matchesData
							.find((obj) => obj.matchId == matchId)
							.score.split(":")
							.map(Number);

						if (parseInt(match[1]) == 1)
							if (
								!dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).scoreTarget ||
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).scoreTarget >
									co1Score + 1
							) {
								++co1Score;
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).score = `${co1Score}:${co2Score}`;
								GameScoreCounting(chatId, matchId);
							} else {
								++co1Score;
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).score = `${co1Score}:${co2Score}`;

								endOfGame(chatId, matchId, false, 2);
							}

						if (parseInt(match[1]) == 2)
							if (
								!dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).scoreTarget ||
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).scoreTarget >
									co2Score + 1
							) {
								++co2Score;
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).score = `${co1Score}:${co2Score}`;
								GameScoreCounting(chatId, matchId);
							} else {
								++co2Score;
								dataAboutUser.matchesData.find(
									(obj) => obj.matchId == matchId
								).score = `${co1Score}:${co2Score}`;

								endOfGame(chatId, matchId, false, 2);
							}
					}

					if (data.includes("downScore")) {
						match = data.match(/^downScore(\d+)WithId(\d+)$/);

						matchId = parseInt(match[2]);

						[co1Score, co2Score] = dataAboutUser.matchesData
							.find((obj) => obj.matchId == matchId)
							.score.split(":")
							.map(Number);

						if (parseInt(match[1]) == 1) co1Score -= 1;
						if (parseInt(match[1]) == 2) co2Score -= 1;

						dataAboutUser.matchesData.find(
							(obj) => obj.matchId == matchId
						).score = `${co1Score}:${co2Score}`;
						GameScoreCounting(chatId, matchId);
					}
				}

				if (data.includes("CreationNewMatchWithSportNum")) {
					match = data.match(/^CreationNewMatchWithSportNum(\d+)$/);

					CreationNewMatch(chatId, null, match[1]);
				}

				if (data.includes("toggleWriteScore")) {
					match = data.match(/^toggleWriteScore(\d+)WithId(\d+)$/);

					matchId = parseInt(match[2]);

					if (parseInt(match[1]) == 1) {
						dataAboutUser.writeco1score = !dataAboutUser.writeco1score;
						dataAboutUser.writeco2score = false;
					} else if (parseInt(match[1]) == 2) {
						dataAboutUser.writeco1score = false;
						dataAboutUser.writeco2score = !dataAboutUser.writeco2score;
					}

					GameScoreCounting(chatId, matchId);
				}

				if (data.includes("matchWithId")) {
					match = data.match(/^matchWithId(\d+)$/);

					GameScoreCounting(chatId, match[1]);
				}

				if (data.includes("settingsForMatchWithId")) {
					match = data.match(/^settingsForMatchWithId(\d+)$/);

					CreationNewMatch(chatId, match[1]);
				}

				if (data.includes("addQuarterWithId")) {
					try {
						match = data.match(/^addQuarterWithId(\d+)$/);

						matchId = parseInt(match[1]);

						let [co1Score, co2Score] = dataAboutUser.matchesData
							.find((obj) => obj.matchId == matchId)
							.score.split(":")
							.map(Number);

						dataAboutUser.matchesData
							.find((obj) => obj.matchId == matchId)
							.scoresInQuarters.push(`${co1Score}:${co2Score}`);

						dataAboutUser.matchesData.find(
							(obj) => obj.matchId == matchId
						).quarterOfGame += 1;

						GameScoreCounting(chatId, matchId);
					} catch (error) {
						console.log(error);
						sendDataAboutError(
							chatId,
							dataAboutUser.login,
							`${String(error)}`
						);
					}
				}

				if (data.includes("continueAndAddQuarterForMatchWithId")) {
					match = data.match(/^continueAndAddQuarterForMatchWithId(\d+)$/);

					matchId = parseInt(match[1]);

					let [co1Score, co2Score] = dataAboutUser.matchesData
						.find((obj) => obj.matchId == matchId)
						.score.split(":")
						.map(Number);

					dataAboutUser.matchesData
						.find((obj) => obj.matchId == matchId)
						.scoresInQuarters.push(`${co1Score}:${co2Score}`);

					dataAboutUser.matchesData.find(
						(obj) => obj.matchId == matchId
					).quarterOfGame += 1;

					dataAboutUser.matchesData.find(
						(obj) => obj.matchId == matchId
					).scoreTarget =
						dataAboutUser.matchesData.find(
							(obj) => obj.matchId == matchId
						).firstScoreTarget *
						dataAboutUser.matchesData.find(
							(obj) => obj.matchId == matchId
						).quarterOfGame;

					GameScoreCounting(chatId, parseInt(match[1]));
				}

				if (data.includes("endOfGameWithId")) {
					match = data.match(/^endOfGameWithId(\d+)$/);

					endOfGame(chatId, parseInt(match[1]));
				}

				if (data.includes("historyOfMatchesWithSportNumForHistory")) {
					match = data.match(
						/^historyOfMatchesWithSportNumForHistory(\d+)$/
					);

					historyOfMatches(chatId, parseInt(match[1]));
				}

				if (data.includes("copySettingsFromMatchWithId")) {
					match = data.match(/^copySettingsFromMatchWithId(\d+)$/);

					CreationNewMatch(
						chatId,
						null,
						null,
						null,
						null,
						null,
						parseInt(match[1])
					);
				}

				//? –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

				switch (data) {
					case "judgeMenu":
						JudgeMenu(chatId);
						break;
					case "exit":
						menuHome(chatId);
						break;
					case "netsporta":
						netsporta(chatId);
						break;
					case "gameScore":
						dataAboutUser.writeco1score = false;
						dataAboutUser.writeco2score = false;

						while (
							dataAboutUser.matchesData[
								dataAboutUser.matchesData.indexOf(
									dataAboutUser.matchesData.find(
										(obj) =>
											obj.score == "0:0" && obj.quarterOfGame == 1
									)
								)
							]
						) {
							dataAboutUser.matchesData[
								dataAboutUser.matchesData.indexOf(
									dataAboutUser.matchesData.find(
										(obj) =>
											obj.score == "0:0" && obj.quarterOfGame == 1
									)
								)
							] = [];
						}

						if (
							!dataAboutUser.matchesData[
								dataAboutUser.matchesData.indexOf(
									dataAboutUser.matchesData.find(
										(obj) =>
											obj.score == "0:0" && obj.quarterOfGame == 1
									)
								)
							]
						) {
							// –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ scoreHistoryButtons
							scoreHistoryButtons = [];

							dataAboutUser.matchesData.forEach(async (match) => {
								if (match.isOver == false) {
									await scoreHistoryButtons.push([
										{
											text: `${
												match.sportNum == 1
													? "üèÄ"
													: `${
															match.sportNum == 2
																? "üèê"
																: `${
																		match.sportNum == 3
																			? "‚öΩ"
																			: `${
																					match.sportNum ==
																					4
																						? "üèì"
																						: `${
																								match.sportNum ==
																								5
																									? "‚öôÔ∏è"
																									: ``
																						  }`
																			  }`
																  }`
													  }`
											} –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ( ${match.score} ) - ${
												match.quarterOfGame
											}-–π`,
											callback_data: `matchWithId${match.matchId}`,
										},
									]);
								}
							});
						}

						GameScore(chatId);
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "historyOfMatches":
						historyOfMatches(chatId);
						break;
					case "settings":
						if (dataAboutUser.userAction == "endOfGame")
							endOfGame(chatId, dataAboutUser.currentMatchId);
						else Settings(chatId);
						break;
					case "moreAboutUs":
						moreAboutUs(chatId);
						break;
					case "motivation":
						Motivation(chatId);
						break;

					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					case "":
						break;
					default:
						break;
				}

				// –î–ª—è –±–æ—Ç–∞ –æ—Ç–ª–∞–¥–∫–∏
				if (chatId != qu1z3xId && chatId != jackId) {
					sendDataAboutButton(chatId, dataAboutUser.login, data);
				}
			}
		});
	} catch (error) {
		console.log(error);
	}
}

StartAll();
